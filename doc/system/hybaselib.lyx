#LyX 1.4.1 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage{times}
\usepackage[
    a4paper,     
    dvips,        
    pdftitle={Aufbau und Implementierung des HydrixOS Basissystems},
    pdfauthor={Friedrich Graeter},
    colorlinks,   
    linkcolor=black,
    urlcolor=blue,
    citecolor=blue]{hyperref} 
\end_preamble
\language ngerman
\inputencoding auto
\fontscheme helvet
\graphics default
\paperfontsize 12
\spacing single
\papersize a4paper
\use_geometry true
\use_amsmath 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 1.5cm
\headsep 0.5cm
\footskip 1cm
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\defskip medskip
\quotes_language german
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes true
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
lhead{}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
rhead{}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
lfoot{}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
cfoot{- 
\backslash
thepage
\backslash
 -}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
rfoot{}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
chead{}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
renewcommand{
\backslash
headrulewidth}{0.0pt}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
renewcommand{
\backslash
footrulewidth}{0.1pt}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout Title
Aufbau und Implementierung 
\newline
der 
\newline
 HydrixOS-Basisbibliothek
\newline
hyBaseLib
\end_layout

\begin_layout Author
Friedrich Gräter
\end_layout

\begin_layout Subsubsection

\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsubsection
Lizenz
\end_layout

\begin_layout Standard
This work is licensed under the terms of the 
\emph on
Creative Commons Attribution-ShareAlike License
\emph default
.
 You are free to
\end_layout

\begin_layout Itemize
to copy, distribute, display and perform this work
\end_layout

\begin_layout Itemize
to make derivative works
\end_layout

\begin_layout Itemize
to make commercial use of this work
\end_layout

\begin_layout Standard
Under the following conditions:
\end_layout

\begin_layout Description
Attribution.
 You must give the original author credit.
\end_layout

\begin_layout Description
Share\InsetSpace ~
alike.
 If you alter, transfer, or build upon this work, you may distribute the
 resulting work only under a license identical to this one.
\end_layout

\begin_layout Itemize
For any reuse or distribution, you must make clear to others the license
 terms of this work.
\end_layout

\begin_layout Itemize
Any of these conditions can be waived if you get permission of the copyright
 holder.
\end_layout

\begin_layout Standard
Your fair use and other rights are not affected by the above.
 This was a human-readable summary of the legal code (the full license).
 
\newline

\end_layout

\begin_layout Standard
\align center

\series bold
To view a copy of the full license, visit 
\end_layout

\begin_layout Standard
\align center
\begin_inset LatexCommand \htmlurl{http://creativecommons.org/licenses/by-sa/2.0/}

\end_inset

 
\end_layout

\begin_layout Standard
\align center

\series bold
or send a letter to
\series default
 
\newline

\end_layout

\begin_layout Standard
\align center
Creative Commons, 
\end_layout

\begin_layout Standard
\align center
559 Nathan Abbott Way, 
\end_layout

\begin_layout Standard
\align center
Stanford, California 94305, 
\end_layout

\begin_layout Standard
\align center
USA.
\end_layout

\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsubsection*
Vorwort
\end_layout

\begin_layout Standard
An unterster Stelle des Benutzer-Raums von HydrixOS steht die sog.
 
\emph on
hyBaseLib
\emph default
.
 Diese Bibliothek bietet ganz grundlegende Funktionen für die Implementierung
 des höheren HydrixOS-Systems an.
 Dazu gehört die Bindings zum 
\emph on
hymk
\emph default
, Primitiven zur Speicherverwaltung, Stringfunktionen oder eine einfache
 Threadverwaltung.
 
\end_layout

\begin_layout Standard
In diesem Dokument sollen die grundlegenden Prinzipien dieser 
\emph on
hyBaseLib
\emph default
 zunächst erläutert werden.
 Anschließend folgt eine Übersicht über die einzelnen API-Aufrufe der 
\emph on
hyBaseLib
\emph default
 und zum Schluss eine vollständige Dokumentation der Implementierung dieser
 Bibliothek.
\end_layout

\begin_layout Standard
\begin_inset LatexCommand \tableofcontents{}

\end_inset


\end_layout

\begin_layout Part
Konzepte der hyBaseLib
\end_layout

\begin_layout Chapter
Gliederung der HydrixOS-API
\end_layout

\begin_layout Standard
Die HydrixOS-API gliedert sich in mehrere Ebenen und dementsprechend auch
 in mehrere Bibliotheken auf.
 An unterster Stelle steht die Grundlagenbibliothek 
\emph on
hyBaseLib
\emph default
 
\begin_inset Foot
status collapsed

\begin_layout Standard
Für die Namenskonvention von Bibliotheken gilt, das übliche Schema aus Prefix
 
\emph on
hy
\emph default
, dem Bibliotheksnamen und dem Suffix 
\emph on
Lib
\emph default
.
 Bei Bibliotheken, die nur für eine bestimmte Programmiersprache entworfen
 worden sind, folgt dem Suffix 
\emph on
Lib
\emph default
 ein Kürzel, dass die Sprache kennzeichnet (z.B.
 
\emph on
hyStdLibC
\emph default
 für die C-Standardbibliothek unter HydrixOS)
\end_layout

\end_inset

.
 Diese Bibliothek stellt grundlegende Funktionen für den Systembetrieb zur
 Verfügung.
 Dazu gehören Bindings für die Systemaufrufe des 
\emph on
hymk
\emph default
, dazu gehört die Verwaltung des 
\emph on
Thread Local Storage
\emph default
 eines Threads, dazu gehört die Verwaltung des virtuellen Adressraums, Primitive
n zur Threadverwaltung und Synchronisation über Mutexe.
 Die 
\emph on
hyBaseLib
\emph default
 bildet somit die Grundlage des Benutzer-Raums unter HydrixOS.
 Alle weiteren API-Bibliotheken bauen auf dieser kleinen Bibliothek auf.
\end_layout

\begin_layout Chapter
Konzepte und Aufgaben der 
\emph on
hyBaseLib
\end_layout

\begin_layout Section
Verwaltung des 
\emph on
thread local storage
\end_layout

\begin_layout Standard
Der HydrixOS Mikrokernel 
\emph on
hymk
\emph default
 stellt jedem Thread einen kleinen, individuellen Speicherbereich zur Verfügung,
 in dem der Thread private Daten ablegen kann.
 Dieser Speicherbereich wird 
\emph on
thread local storage
\emph default
 oder 
\emph on
TLS 
\emph default
genannt.
 Ein solcher 
\emph on
TLS
\emph default
 ist sinnvoll, da ein Thread sehr oft auf Daten zugreifen müssen, die speziell
 diesem Thread zugeordnet sind und nur für diesen relevant sind.
 Dazu gehört z.B.
 der aktuelle Fehlerzustand der API-Bibliothek.
 Es wäre eine Verschwendung von CPU-Zeit, wenn jeder Thread zunächst eine
 Threadtabelle entlanglaufen müsste, um seine lokalen Variablen zu finden
 - daher ist eine Speicherseite des virtuellen Adressraums speziell für
 den 
\emph on
TLS 
\emph default
vorreserviert.
 Wird beim Prozesswechsel der aktuelle Thread ausgetauscht, so wird dementsprech
end die Speicherseite des aktuellen 
\emph on
TLS
\emph default
 auf die des Threads geändert, der nun die CPU erhält.
 Dadurch erhält jeder Thread den Eindruck, als ob an einer bestimmten, festgeleg
ten Speicherstelle im virtuellen Adressraum ein lokaler Speicherbereich
 liegt, der private Inhalte speichern kann.
\end_layout

\begin_layout Standard
Da der Speicherplatz in diesem TLS jedoch sehr begrenzt ist und es eine
 Reihe von Standard-Anwendungen für den TLS gibt (der besagte Fehlerzustand),
 scheint es sinnvoll, wenn der Speicherplatz auf dem TLS bereits auf unterster
 Ebene der API-Bibliothek verwaltet wird.
 Folglich ist die Verwaltung des TLS Aufgabe der 
\emph on
hyBaseLib
\emph default
.
\end_layout

\begin_layout Standard
Die 
\emph on
hyBaseLib
\emph default
 teilt den TLS in zwei gleich große Bereiche: Die lokale Zone und die globale
 Zone.
 Die Struktur der lokalen Zone gilt nur für den aktuellen Thread - d.h.
 wird dort ein Speicherbereich reserviert, so ist diese nur im TLS des aktuellen
 Threads reserviert.
 Die Struktur der globalen Zone hingegen gilt für alle Threads.
 Wird in der globalen Zone ein Speicherbereich reserviert, so gilt er in
 allen TLS als reserviert.
 Dadurch können z.B.
 lokale Threadvariablen realisiert werden, deren Inhalt zwar an den Thread
 gebunden ist, deren Adresse jedoch für alle Threads gleich ist.
 Der Fehlerzustand des aktuellen Threads liegt z.B.
 immer an der gleichen Adresse im virtuellen Adressraum - unabhängig vom
 laufenden Thread.
 
\end_layout

\begin_layout Standard
Da der Speicher auf dem TLS sehr begrenzt ist, kann sein Speicher nur sehr
 rudimentär verwaltet werden.
 Daher ist es zwar möglich auf dem TLS einen Bereich zu reservieren - ist
 er aber einmal reserviert, so kann er nicht mehr freigegeben werden.
 Dies reicht für die meisten TLS-basierten Aufgaben aus, da diese meist
 Zeiger auf dem TLS ablegen, die für den gesamten Prozess- oder Threadbetrieb
 weiterbestehen sollen.
 Für eine komplexere TLS-Verwaltung sind High-Level-Funktionen nötig, die
 den TLS über eine externe Tabelle verwalten.
\end_layout

\begin_layout Standard
Zur Verwaltung der globalen Zone ist die Funktion 
\emph on
tls_global_alloc
\emph default
 zuständig, für die Verwaltung der lokalen Zone ist die Funktion 
\emph on
tls_local_alloc
\emph default
 zuständig.
 Beim Initialisieren der Grundlagenbibliothek wird der aktuelle Fehlerzustand
 global auf allen TLS alloziiert und ein Zeiger darauf in 
\emph on
tls_errno
\emph default
 abgelegt.
 Ein Thread der seinen privaten Fehlerzustand auslesen will, braucht also
 nur diesen globalen Zeiger zu dereferenzieren.
\end_layout

\begin_layout Section
Bindings der Systemaufrufe
\end_layout

\begin_layout Standard
Damit ein Anwendungsprogramm überhaupt die Fähigkeiten des HydrixOS Mikrokernels
 nutzen kann, muss es in der Lage sein, dessen Systemaufrufe auszulösen.
 Da dies eine sehr plattformspezifische Tätigkeit ist, wird sie durch die
 Grundlagenbibliothek gekapselt.
 Die jeweiligen Systemaufrufe des 
\emph on
hymk
\emph default
 liegen als Funktion mit gleichem Namen, allerdings einem vorangehenden
 Prefix 
\emph on
hymk
\emph default
, vor.
 Diese Funktionen nehmen ebenfalls den zurückgegebenen Fehlerwert des 
\emph on
hymk
\emph default
 entgegen und speichern ihn in den lokalen Fehlerzustand des Threads.
\end_layout

\begin_layout Section
Kapselung plattformspezifischer Kernel-Schnittstellen
\end_layout

\begin_layout Standard
Einige Schnittstellen des 
\emph on
hymk
\emph default
 sind sehr plattformspezifisch Entworfen worden, um unnötigen Overhead zu
 vermeiden.
 Zu diesen Schnittstellen gehören u.a.
 die Hauptinfopage, die Prozess- und Threadtabelle, sowie die Aufrufe 
\emph on
hymk_alloc_pages
\emph default
, 
\emph on
hymk_io_alloc, hymk_map
\emph default
, 
\emph on
hymk_unmap
\emph default
 und 
\emph on
hymk_move
\emph default
.
 Die HydrixOS-API enthält Aufrufe, die diese Schnittstellen plattformübergreifen
d nutzbar machen können.
 
\end_layout

\begin_layout Subsubsection
Zugriff auf Infopages
\end_layout

\begin_layout Standard
Die Hauptinfopage kann durch den Aufruf 
\emph on
hysys_info_read
\emph default
, die Prozesstabelle über den Aufruf 
\emph on
hysys_proctab_read
\emph default
 und die Threadtabelle über den Aufruf 
\emph on
hysys_thrtab_read
\emph default
 ausgelesen werden.
 Diese Aufrufe kapseln zwar nicht die Struktur dieser Schnittstellen (hierfür
 sind jedoch Makros in der Include-Datei 
\emph on
hymk/sysinfo.h
\emph default
 enthalten), aber sie kapseln den generellen Zugriff auf diese Info-Pages.
 
\end_layout

\begin_layout Subsubsection
Zugriff auf Speicherverwaltungsaufrufe
\end_layout

\begin_layout Standard
Alle Speicherverwaltungsaufrufe des 
\emph on
hymk
\emph default
 (
\emph on
hymk_alloc_pages
\emph default
, 
\emph on
hymk_io_alloc hymk_map
\emph default
, 
\emph on
hymk_unmap
\emph default
 und 
\emph on
hymk_move
\emph default
) können nur eine implementierungsspezifische Anzahl von Speicherseiten
 auf einmal verarbeiten (für die derzeitige x86-Version des 
\emph on
hymk 
\emph default
sind es 8 MiB), da zu lange Arbeitszeiten im (derzeit nicht preemptiblen)
 Kernel-Modus zu vermeiden sind.
 Um dem Entwickler jedoch das ständige Zerlegen der Speicheroperationen
 in die implementierungsspezifischen Mengen zu erlassen, wurden die API-Aufrufe
 
\emph on
hysys_alloc_pages
\emph default
, 
\emph on
hysys_io_alloc, hysys_map
\emph default
, 
\emph on
hysys_unmap
\emph default
 und 
\emph on
hysys_move
\emph default
 geschaffen, die diese Aufgaben automatisch erledigen.
\end_layout

\begin_layout Section
Speicherzugriff
\end_layout

\begin_layout Standard
Da die Standard-Bibliotheken der meisten Programmiersprachen Funktionen
 für das Dateisystem benötigen, implementiert die Grundlagenbibliothek einige
 Aufrufe zur Verarbeitung von Speicherbereichen und Zeichenfolgen.
 Normalerweise ist es sinnvoll, wenn die Funktionen der jeweiligen Sprachen
 verwendet werden - die Aufrufe der 
\emph on
hyBaseLib
\emph default
 sind nur für Bibliotheken und Programme gedacht, die ohne Standardbibliothek
 ihrer Sprache auskommen müssen.
 
\end_layout

\begin_layout Standard
Zur Verarbeitung von Speicherbereichen mit fester Länge existieren die Funktione
n 
\emph on
buf_copy
\emph default
 (Kopieren eines Puffers), 
\emph on
buf_fill
\emph default
 (Füllen eines Puffers mit einem Datenwort), 
\emph on
buf_compare
\emph default
 (Vergleich zweier Puffer), 
\emph on
buf_find_uint8, buf_find_uint16, buf_find_uint32, buf_find_uint64
\emph default
 (Finden eines Datenwortes bestimmter Länge in einem Puffer) und 
\emph on
buf_find_buf
\emph default
 (Finden einer größeren Datenfolge in einem Puffer).
 Zur Verarbeitung von nullterminierten UTF-8 und ASCII-Zeichenfolgen existieren
 die Funktionen 
\emph on
str_copy
\emph default
 (Kopieren eines String), 
\emph on
str_compare
\emph default
 (Vergleichen zweier Strings), 
\emph on
str_len
\emph default
 (Ermitteln der Länge eines Strings), 
\emph on
str_char 
\emph default
(Finden eines ASCII-Zeichens in einem String) und 
\emph on
str_find
\emph default
 (Finden eines Strings in einem String).
\end_layout

\begin_layout Section
Organisation des virtuellen Adressraums
\end_layout

\begin_layout Subsection
Regionen
\end_layout

\begin_layout Standard
Der virtuelle Adressraum wird durch die 
\emph on
hyBaseLib
\emph default
 auf oberster Ebene in Regionen unterteilt.
 Eine Region ist ein Bereich des virtuellen Adressraums, der einen einheitlichen
 Zweck erfüllt, eine bestimmte Speicherverwaltungsroutine benutzt und bestimmte
 feste Eigenschaften trägt.
 Ferner bestehen Regionen normalerweise über den gesamten Programmbetrieb
 oder zumindest sehr lange Zeiträume hinweg.
 Regionen können manuell über den Aufruf 
\emph on
reg_create
\emph default
 erstellt und über den Aufruf 
\emph on
reg_destroy
\emph default
 zerstört werden.
 Es existiert eine verkettete Liste 
\emph on
regions
\emph default
, die alle Header einer Speicherregion miteinander verbindet.
 Der Header einer Speicherregion liegt normalerweise in deren ersten Speichersei
te, eine Abweicung ist aber prinzipiell möglich.
 Sie sollte aber nur dann verwendet werden, wenn es unbedingt erforderlich
 ist (z.B.
 bei den Init-Modulen).
 Diese Speicherseite ist zumindest lesbar und beschreibbar.
\end_layout

\begin_layout Standard
Der Header einer Speicherregion speichert folgende Eigenschaften einer Region:
\end_layout

\begin_layout Itemize
Name der Region (32-Zeichen UTF-8)
\end_layout

\begin_layout Itemize
Identifizierungsnummer der Region (Integer-Zahl)
\end_layout

\begin_layout Itemize
Zugriffsrechte (
\emph on
lesen, schreiben, ausführen, gemeinsame Nutzung, statische Inhalte
\emph default
)
\end_layout

\begin_layout Itemize
Routinen für Speicherallokation und Freigabe
\end_layout

\begin_layout Itemize
Gesamtzahl gültiger Speicherseiten
\end_layout

\begin_layout Itemize
Anzahl lesbarer Speicherseiten
\end_layout

\begin_layout Itemize
Anzahl beschreibbarer Speicherseiten
\end_layout

\begin_layout Itemize
Anzahl ausführbarer Speicherseiten
\end_layout

\begin_layout Itemize
Anzahl gemeinsam genutzter Speicherseiten
\end_layout

\begin_layout Standard
Die Zugriffsrechte einer Speicherregion haben keinen direkten Einfluss auf
 die Zugriffsrechte der in Speicherseiten dieser Region.
 Sie dienen nur zur allgemeinen Information und sollten die Zugriffsrechte
 des Großteils aller Speicherseiten darstellen.
 Die Umsetzung dieser Zugriffsrechte sollte durch die Routine zur Speicheralloka
tion stattfinden.
 Die Daten zur Anzahl von Speicherseiten müssen ebenfalls nicht korrekt
 sein und dienen viel mehr statistischen Zwecken.
 Sie sollten allerdings von der verwendeten Routine zur Speicherallokation
 aktualisiert werden.
\end_layout

\begin_layout Standard
Eine Region muss nicht zwingend mit gültigen Speicherseiten vollständig
 aufgefüllt sein.
 Sie muss auch nicht zwingend eine Allokations- und Freigabefunktion anbieten,
 sondern kann auch statische Inhalte haben.
\end_layout

\begin_layout Subsection
Vordefinierte Regionen
\end_layout

\begin_layout Standard
Die 
\emph on
hyBaseLib
\emph default
 gibt einige Regionen standardmäßig
\begin_inset Foot
status collapsed

\begin_layout Standard
In den ersten HydrixOS-Versionen werden die Code und die Daten-Region aus
 Ermangelung einer Software zum Laden von Programmen noch nicht aktiviert
 sein.
 Der Init-Prozess muss diese Regionen selbst initialisieren.
\end_layout

\end_inset

 vor, die nach der Initialisierung der Bibliothek bestehen:
\end_layout

\begin_layout Itemize
Die 
\emph on
Code
\emph default
-Region, welche den ausführbaren Maschinencode des Programms enthält.
 Diese Region besitzt keinen Allokator und darf nur ausgelesen und ausgeführt
 werden.
\end_layout

\begin_layout Itemize
Die 
\emph on
Daten
\emph default
-Region, welche die statischen Daten des Programms enthält.
 Diese Region besitzt ebenfalls keinen Allokator und darf nur ausgelesen
 und beschrieben werden.
\end_layout

\begin_layout Itemize
Die 
\emph on
Stack
\emph default
-Region, welche die Stacks der verschiedenen Threads enthält.
 Diese Region besitzt einen Allokator, darf aber nur ausgelesen und beschrieben
 werden
\begin_inset Foot
status collapsed

\begin_layout Standard
In der derzeitigen Implementierung der HydrixOS-API bleibt die Stack-Region
 ungenutzt, da Stack-Bereiche über den Heap alloziiert werden.
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Die 
\emph on
Heap
\emph default
-Region, welche den Heap (d.h.
 dynamisch alloziierte Daten) des Prozesses enthält.
 Diese Region besitzt ebenfalls einen Allokator und darf auch nur ausgelesen
 und beschrieben werden.
\end_layout

\begin_layout Itemize
Die 
\emph on
Mapping
\emph default
-Region, welche zur Allokation von Page-Mappings speicher bereitstellt.
 Diese Region besitzt ebenfalls einen Allokator.
\end_layout

\begin_layout Standard
Diese vordefinierten Regionen haben Plattformabhängige Größen und Positionen
 im virtuellen Adressraum
\begin_inset Foot
status open

\begin_layout Standard
Die x86-Architektur hält Code, Stack und Daten im ersten GiB des Adressraums.
 Der Heap erhält das 2.
 GiB des virtuellen Adressraums.
 Das 3.
 GiB wird normalerweise durch das Mapping-Region verbraucht.
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Subsection
Dynamische Regionen
\end_layout

\begin_layout Standard
Prinzipiell können während des Betriebs weitere Regionen im verbleibenden
 virtuellen Adressraums während des Betriebs erstellt werden.
 Hierfür ist der Aufruf 
\emph on
reg_create
\emph default
 zuständig, der eine Region in einem gegebenen Speicherbereich anlegt.
 Mit dem Aufruf 
\emph on
reg_destroy
\emph default
 kann eine bestehende Region wieder vernichtet werden.
\end_layout

\begin_layout Standard
In der Regel ist das Anlegen von Regionen jedoch nicht nötig und auch kaum
 möglich, da meist der gesamte Adressraum mit Regionen belegt ist.
 Es ist daher meist sinnvoller Speicher im Map-Bereich der Mapping-Region
 zu verwenden.
\end_layout

\begin_layout Section
Verwaltung des Heaps
\begin_inset LatexCommand \label{sub:Verwaltung-des-Heaps}

\end_inset


\end_layout

\begin_layout Subsection
Grobe Organisation des Heaps
\end_layout

\begin_layout Standard
Um nicht unnötig Seitenrahmen zu verschwenden, ist die Heap-Region normalerweise
 nicht vollständig mit Seitenrahmen aufgefüllt.
 Zunächst einmal ist der Bereich mit nutzbaren Seitenrahmen auf dem Heap
 begrenzt.
 Dieser Bereich (der sog.
 Nutzbereich des Heaps) fängt nach dem Regionsdeskriptor des Heaps an und
 geht bis zu einer festgelegten Obergrenze.
 Diese Obergrenze kann durch den Aufruf 
\emph on
mem_heap_inc
\emph default
 erweitert und mit 
\emph on
mem_heap_dec
\emph default
 herabgesenkt werden, wobei entsprechend mit Hilfe von 
\emph on
hymk_alloc_pages
\emph default
 neue Seitenrahmen dem Adressraum hinzugefügt, bzw.
 mit 
\emph on
hymk_unmap
\emph default
 entfernt werden.
 Liegen in der Mitte dieses Bereichs freie Speicherbereiche vor, die sich
 über mehre Speicherseiten hinweg erstrecken, so werden deren Seitenrahmen
 ebenfalls freigegeben und erst wieder bei Bedarf alloziiert.
\end_layout

\begin_layout Subsection
API-Aufrufe zur Speicherverwaltung
\end_layout

\begin_layout Standard
Der Nutzbereich des Heaps selbst wird nun selbst in sog.
 Speicherblöcke zerteilt, welche die dynamischen erzeugten Daten des Prozeses
 enthalten können.
 Diese Speicherblöcke können durch den Aufruf von 
\emph on
mem_alloc
\emph default
 alloziiert und mit dem Aufruf 
\emph on
mem_free
\emph default
 wieder freigegeben werden.
 Der Aufruf 
\emph on
mem_realloc
\emph default
 kann Speicherblöcke vergrößern oder verkleinern, wobei dies oft ein Verschieben
 des Speicherblocks samt Inhalt bedeutet.
\end_layout

\begin_layout Subsection
Beschreibung der Blockverwaltung
\end_layout

\begin_layout Standard
Jeder Speicherblock besitzt einen Header, der dem vom Programm genutzten
 Bereich des Speicherblocks vorausgeht.
 Dieser Header enthält Informationen über die Größe und Zustand des Blocks.
 Alle Blöcke - ob sie nun freie Speicherberiche oder belegte Speicherbereiche
 enthalten, sind grundsätzlich in einer großen verketteten Liste zusammengefasst
, der sog 
\emph on
General Block List
\emph default
 (GBL).
 Alle Blöcke, die einen belgten Speicherbereich enthalten, sind ebenfalls
 in einer verketteten Liste zusammengefasst, der sog.
 
\emph on
Used Block List
\emph default
 (UBL).
 
\end_layout

\begin_layout Standard
Die freien Speicherblöcke jedoch werden in mehreren unterschiedilchen Listen,
 den sog.
 
\emph on
Free Block Lists
\emph default
 (FBL) verwaltet.
 Jede FBL hat eine Ordnungszahl (dies wird mit 
\emph on
FBL
\emph default
(
\emph on
n
\emph default
) notiert, wobei 
\emph on
n 
\emph default
die Ordnungszahl ist), wobei die Anzahl der FBLs plattformabhängig ist.
 Eine FBL der Ordnungszahl n enthält alle freien Speicherbereiche, die im
 Größenbereich von 2
\begin_inset Formula $^{\textrm{n}}$
\end_inset

 bis 2
\begin_inset Formula $^{\textrm{n+1}}$
\end_inset

-1 liegen.
 Die x86-Architektur verwendet 31 getrennte Listen, wodurch prinzipiell
 freie Speicherbereiche bis zu einer Größe von bis zu 4 GiB verwaltet werden
 könnten.
 Bei der Größenbemessung wird der Header nicht mit eingeschlossen - d.h.
 ein Speicherblock muss zumindest so groß wie sein Header sein.
\end_layout

\begin_layout Subsection
Der Allokationsalgorithmus
\end_layout

\begin_layout Standard
Die Allokation eines Speicherbereichs läuft wie folgt ab: Zunächst wird
 eine FBL ausgewählt, welche die Größenanforderung so exakt wie möglich
 erfüllen kann.
 Enthält diese keine Speicherblöcke, wird die nächst größere FBL ausgewählt.
 Die gewählte FBL wird nun nach einem Block durchsucht, der exakt der Speicheran
forderung entspricht.
 
\end_layout

\begin_layout Standard
Wird kein exakt passender freier Speicherblock gefunden, so muss ein Block
 zerteilt werden.
 Bei dieser Zerteilung entsteht der neue Nutzblock und ein Verschnitt, der
 seinerseits als freier Speicherblock registriert wird.
 Damit hier eine erneute Suche nicht nötig wird, wird bereits bei der Suche
 nach dem exakt passenden Speicherblock jeweils ein Block notiert, bei dem
 ein sehr kleiner Verschnitt entsteht (sog.
 
\emph on
best-fit
\emph default
)
\begin_inset Foot
status collapsed

\begin_layout Standard
Es entsteht kein Verschnitt, wenn der theoretische Verschnitt kleiner als
 ein Block-Header ist.
 In diesem Fall, wird der neue Bereich einfach entsprechend größer alloziiert.
 Restbereiche die kleiner als ein Block-Header sind, könnten sonst nicht
 einmal ihren eigenen Block-Header enthalten.
\end_layout

\end_inset

.
 War die Suche in der aktuellen FBL erfolglos, so wird in der nächst höheren
 FBL weitergesucht.
 Wird in keiner FBL ein passender Block gefunden, so wird der Heap durch
 den Aufruf von 
\emph on
mem_heap_inc
\emph default
 entsprechend vergrößert und am Ende des Heaps ein neuer Block angelegt.
 Um das Heap-Ende schneller auffinden zu können, wird der Heap-Deskriptor
 mit der höchsten Speicheradresse im Voraus gespeichert.
\end_layout

\begin_layout Standard
Dieses 
\emph on
quick-best-fit
\emph default
 Verfahren versucht zum einen die lange Suchzeit eines üblichen 
\emph on
best-fit
\emph default
 zu reduzieren, da die Suche zuerst mit den Blockgrößen anfängt, die am
 wahrscheinlichsten dem 
\emph on
best-fit
\emph default
-Prinzip entsprechen und alle viel zu kleinen Blockgrößen grundsätzlich
 übergeht.
 
\end_layout

\begin_layout Subsection
Der Freigabealgorithmus
\end_layout

\begin_layout Standard
Da die GBL alle Speicherblöcke enthält, kann bei der Freigabe eines Speicherbloc
ks rasch festgestellt werden, ob ein Nachbarblock des freizugebenden Blocks
 selbst ein freier Speicherblock ist und somit eine Vereinigung der Blöcke
 zu einem großen Block möglich ist.
 Liegt ein Speicherbereich am oberen Ende des Heaps, so wird nach einer
 evtl.
 Vereinigung mit Nachbarblöcken der Heap durch Aufruf von 
\emph on
mem_heap_dec
\emph default
 verkleinert und der Block völlig aus der Tabelle entfernt oder zumindest
 verkleinert.
 Entsteht bei der Verkleinerung ein Bereich, der kleiner als ein Blockheader
 ist, so wird dieser Bereich dem benachbarten Block gutgeschrieben.
\end_layout

\begin_layout Standard
Liegt ein Bereich mitten im Heap, so wird der freie Block am Anfang der
 jeweils passenden FBL eingefügt.
 Erstreckt sich ein Block über mehr als eine Seitengrenzen hinweg, so werden
 Seiten, die innerhalb des freien Blocks liegen freigegeben und dies im
 Blockheader vermerkt, so dass bei der Allokation diese Seitenrahmen wiederherge
stellt werden können.
\end_layout

\begin_layout Subsection
Größenänderung bei Blöcken
\end_layout

\begin_layout Standard
Soll ein Block vergrößert werden, wird zunächst überprüft, ob anschließend
 an den aktuellen Block ein freier Bereich (oder das Heap-Ende) liegt, mit
 dem die Vergrößerungsanforderung erledigt werden kann.
 Fehlt ein solcher Block, so wird ein neuer Bereich reserviert und der Blockinha
lt dorthin kopiert.
\end_layout

\begin_layout Standard
Bei einer Verkleinerung bleibt der Block an gleicher Stelle bestehen und
 es wird lediglich am Blockende ein neuer, freier Block angelegt.
 Verkleinerungen die kleiner als die Größe eines Blockheaders sind, bleiben
 jedoch ohne Effekt.
\end_layout

\begin_layout Section
Verwaltung der Mapping-Region
\end_layout

\begin_layout Standard
Der Algorithmus zur Verwaltung der Mapping-Speicherregion arbeitet im wesentlich
en genauso, wie der Algorithmus zur Verwaltung des Heaps (siehe 
\begin_inset LatexCommand \ref{sub:Verwaltung-des-Heaps}

\end_inset

).
 Er unterscheidet sich jedoch darin, dass nur Blöcke alloziiert werden können,
 deren Größe ein ganzahliges Vielfaches einer Speicherseite beträgt und
 die am Anfang einer Speicherseite beginnen.
 Ferner liegen die Blockdeskriptoren dieser Region nicht als Header vor
 dem alloziierten Speicherblock, sondern werden von den Speicherblöcken
 getrennt im Heap abgelegt.
 Ebenfalls sind die Look-Up-Tables für der Mapping-Region auf dem Heap abgelegt.
 
\end_layout

\begin_layout Standard
Zur Allokation eines Speicherblocks in dieser Region ist der Aufruf 
\emph on
pmap_alloc
\emph default
 zuständig.
 Dieser Aufruf reserviert einen Speicherbereich in der Mapping-Region -
 allerdings ohne diesen Speicherbereich mit physischen Seitenrahmen zu unterlege
n.
 Dies ist sinnvoll, da viele Mapping-Speicherbereiche üblicherweise mit
 gemeinsam genutzten Seiten aufgefüllt werden.
 Soll ein Speicherbereich jedoch mit Unterlegung physischer Seitenrahmen
 reserviert werden, so kann dies durch den Aufruf 
\emph on
pmap_mapalloc
\emph default
 gemacht werden.
 Der Aufruf 
\emph on
pmap_free
\emph default
 gibt einen Bereich in der Mapping-Region frei und entfernt dabei automatisch
 alle in diesem Bereich liegenden Seitenrahmen.
\end_layout

\begin_layout Section
Verwaltung des Stacks
\end_layout

\begin_layout Standard
Die 
\emph on
hyBaseLib
\emph default
 erlaubt die Verwaltung von Stacks mit unterschiedlicher Größe.
 Die Bibliotheksroutine zur Reservierung von Stack-Bereichen trägt den Namen
 
\emph on
mem_stack_alloc
\emph default
.
 Die Freigaberoutine trägt den Namen 
\emph on
mem_stack_free
\emph default
.
\end_layout

\begin_layout Standard
Derzeit werden alle Stacks auf dem Heap eines Prozesses gespeichert.
 In späteren Versionen ist eine Verwaltung der Stacks innerhalb der Stack-Region
 erforderlich.
\end_layout

\begin_layout Section
Einfache Thread-Verwaltung
\end_layout

\begin_layout Standard
Die 
\emph on
hyBaseLib
\emph default
 bietet einige rudimentäre Funktionen zur Verwaltung von Threads an.
 Diese Funktionen tragen das Prefix 
\emph on
blthr_
\emph default
 (BaseLib Threads).
 Es gibt dabei Funktionen zum Verdrängen des aktuellen Threads (
\emph on
blthr_yield
\emph default
), zum Anhalten (
\emph on
blthr_freeze
\emph default
) und Aufwecken (
\emph on
blthr_awake
\emph default
) von Threads, zum Erstellen neuer Threads (
\emph on
blthr_create
\emph default
), zum Beenden von Threads (
\emph on
blthr_kill
\emph default
), zum Festlegen von Terminierungsfunktionen des Thread (
\emph on
blthr_atexit
\emph default
),
\emph on
 
\emph default
zur Selbstterminierung eines Threads (
\emph on
blthr_finish
\emph default
) und zum Aufräumen bestehender Threads-Datenstrukturen nach Beendigung
 von Threads (
\emph on
blthr_cleanup
\emph default
).
 Es existiert intern der Aufruf 
\emph on
blthr_init
\emph default
, welcher die interne Start-Up-Funktion des Threads für die 
\emph on
hyBaseLib
\emph default
 enthält.
\end_layout

\begin_layout Standard
Jeder Thread wird dabei durch seinen Thread-Deskriptor identifiziert.
 Der Thread-Deskriptor ist auf dem Heap abgelegt.
 Auf dem TLS des betroffenen Threads liegt ein Zeiger auf die Adresse seines
 Deskriptors.
 Der Deskriptor enthält die Startadresse des verwendeten Stack-Bereichs,
 sowie die Liste der Funktionen, die bei Beendigung des Threads ausgeführt
 werden sollen.
\end_layout

\begin_layout Standard
Auf dem TLS legt die 
\emph on
hyBaseLib
\emph default
 eine Variable 
\emph on
tls_my_thread
\emph default
 ab, welche einen Zeiger auf die Datenstruktur des aktuellen Threads enthält.
 Die Thread-Datenstrukturen selbst verfügen über einen Mutex, der zur Synchronis
ation des Zugriffs auf den Deskriptor zwischen Erzeuger des Threads und
 dem Thread selbst gedacht ist.
 Sollten mehrere Threads gleichzeitig Zugriff auf einen Thread-Deskriptor
 haben, so muss die Synchronisation dieses Zugriffs extern geregelt sein.
 Dies ist sinnvoll, da in den meisten Situationen eben nur der Thread selbst
 oder sein Erzeuger auf den Deskriptor zugreifen und der Mehrfachzugriff
 von mehreren Seiten her eine komplexere und weniger performante Synchronisation
 erfordern würde.
\end_layout

\begin_layout Section
Mutex-Synchronisation
\end_layout

\begin_layout Standard
Für die Synchronisation von Threads stellt die 
\emph on
hyBaseLib
\emph default
 Mutexe zur Verfügung.
 Ein Mutex dient zum Schutz einer kritischen Sektion, die nur von einem
 einzigen Thread gleichzeitig betreten werden darf (z.B.
 zum Schutz einer gemeinsam genutzten Speichervariable).
 Dies wird wie folgt erreicht: Ein Mutex ist eine Variable, die nur durch
 atomare Operationen verarbeitet werden darf.
 Sie kann den Zustand frei (0) und gesperrt (1) einnehmen.
 Damit ein Thread die kritische Sektion betreten kann, muss er zunächst
 den Mutex sperren.
 Dabei wird atomar geprüft, ob der Mutex bereits gesperrt ist oder nicht.
 Ist er noch nicht gesperrt, so wird er im gleichen Zug atomar gesperrt.
 Ist er bereits gesperrt, so gibt der Thread seine CPU-Zeit mittels 
\emph on
blthr_yield 
\emph default
ab und versucht die Variable erneut zu sperren, wenn er die CPU erhält.
 Ist der Mutex gesperrt, so darf der Thread die kritische Sektion betreten
 und die gewünschte Operation ausführen.
 Nachdem die Operation ausgeführt wurde, muss er den Mutex wieder atomar
 freigeben, so dass andere Threads die Sektion wieder betreten können.
\end_layout

\begin_layout Standard
Zum Sperren eines Mutex dient die Operation 
\emph on
mtx_trylock
\emph default
, die lediglich versucht, den Mutex zu sperren, ohne den Thread die CPU-Zeit
 abgeben zu lassen.
 Ferner gibt es die Operation 
\emph on
mtx_lock
\emph default
, die bei gescheitertem Sperrungsversuch zur Abgabe der CPU-Zeit führt.
 Zum Schutz des Threads kann für 
\emph on
mtx_lock
\emph default
 ein Timeout definiert werden.
 Ferner gibt es den Aufruf 
\emph on
mtx_unlock
\emph default
, der zur Entsperrung eines gesperrten Mutex führt.
\end_layout

\begin_layout Standard
Um eine zu einseitige Nutzung des Mutexes zu vermeiden, verfügt der Mutex
 über ein Latency-Bit.
 Versucht ein anderer Thread einen bereits gesperrten Mutex zu sperren,
 so kann er das Latency-Bit setzen.
 Ist es gesetzt, so wird der entsperrende Thread nach dem Aufruf von 
\emph on
mtx_unlock
\emph default
 eine Verdrängung mittels 
\emph on
blthr_yield
\emph default
 auslösen, so dass der andere Thread die Möglichkeit erhält, den Mutex zu
 sperren.
\end_layout

\begin_layout Standard
Ein Mutex muss durch das Makro 
\emph on
MTX_NEW 
\emph default
vor der ersten Verwendung initialisiert werden.
 Für globale Variablen muss während der Variablendefinition das Makro 
\emph on
MTX_DEFINE
\emph default
 verwendet werden.
\end_layout

\begin_layout Section
XML-Parsing
\end_layout

\begin_layout Standard
Das HydrixOS-Dateisystem bietet viele Meta-Informationen in Form von XML-Daten
 an.
 Es ist somit häufig erforderlich, dass selbst einfache Programme bereits
 XML-Daten parsen können.
 Hierfür bietet die hyBaseLib einen minimalen XML-Parser an.
 Dieser Parser unterstützt nicht alle Ausdrucksmöglichkeiten der XML-Sprache.
 Unterstützt werden normale Tags mit Inhalt (z.B.
 <info> </info) und Tags ohne Inhalt (<info/>).
 Tags mit Inhalt werden nach Textdaten oder untergeordneten Tags durchsucht.
 Kommentare (<!-- comment -->), Whitespaces und Processing-Tags (<? process
 data ?>) werden vollständig ignoriert.
 DTD-Informationen (<! info >) sollten derzeit nicht enthalten sein, da
 der Parser sie als normale Tags auffasst.
 XML-Attribute werden auch nicht unterstützt - alle Daten müssen sich zwischen
 Tags befinden.
 CDATA-Bereiche (<element [foo]>) werden ebenfalls nicht unterstützt.
 Es steht aber offen, ob weitere Fähigkeiten der XML-Sprache später hinzugefügt
 werden.
\end_layout

\begin_layout Standard
Der Parser ist primär für die Analyse der Dateisystem-Metadaten gedacht.
 Damit dies möglichst unkompliziert geschehen kann, wandelt die Funktion
 
\emph on
spxml_create_tree
\emph default
 einen String mit XML-Daten in einen Baum um, dessen Kind-Elemente jeweils
 XML-Unterelemente (entweder Daten, leere Tags oder Tags mit weiteren Untereleme
nten) sind.
 Jedes Element enthält außerdem einen Zeiger auf den Bereiche des Eingabestrings
, der den Namen des Elements definiert hat - d.h.
 solange der XML-Baum verwendet wird, darf auch der Eingabestring nicht
 gelöscht werden.
 Ein bestimmtes Element in einem Baum kann mit Hilfe eines XPath-ähnlichen
 Pfades über die Funktion 
\emph on
spxml_resolve_pfad
\emph default
 gefunden werden.
 Wird der Baum nicht mehr verwendet, kann sein Speicher mittels 
\emph on
spxml_destroy_tree
\emph default
 vernichtet werden.
\end_layout

\begin_layout Standard
Die Entity-Referenzen &lt; &gt; &amp; &quot; und &apos; können außerdem
 mit Hilfe des Aufrufs 
\emph on
spxml_replace_stdentities
\emph default
 ersetzt werden.
 
\end_layout

\begin_layout Part
Schnittstellen der HyBaseLib
\end_layout

\begin_layout Chapter
Übersicht über die Schnittstelle
\end_layout

\begin_layout Section
Aufrufe zur Verwaltung des 
\emph on
thread local storage 
\emph default
(TLS)
\end_layout

\begin_layout Subsection

\emph on
tls_global_alloc
\emph default
 - TLS-Bereich global alloziieren
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/tls.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void** tls_global_alloc(void);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
Keine.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Zeiger auf den TLS-Bereich (der selbst ein void* ist).
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Alloziiert einen TLS-Bereich, der auf dem TLS jedes Threads an gleicher
 Position liegen soll.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ENOUGH_MEMORY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der globale TLS-Speicher ist aufgebraucht.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
tls_local_alloc
\emph default
 - TLS-Bereich lokal alloziieren
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/tls.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void** tls_local_alloc(void);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
Keine.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Zeiger auf den TLS-Bereich (der selbst ein void* ist)
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Alloziiert einen TLS-Bereich, der nur auf dem TLS des aktuellen Threads
 sichtbar sein soll.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ENOUGH_MEMORY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der lokale TLS-Speicher ist aufgebraucht.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Section
Implementierung der Kernelaufrufe
\end_layout

\begin_layout Subsection

\emph on
hymk_alloc_pages
\emph default
 - Speicherseiten alloziieren
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_alloc_pages(void* adr, unsigned pages);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
adr Startadresse des Mapping
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pages Anzahl der zu reservierenden Speicherseiten
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Anzahl der gemappten Pages
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Reserviert 
\emph on
pages
\emph default
 freie Seitenrahmen und fügt sie an der festgelegten Startadresse 
\emph on
adr
\emph default
 im aktuellen virtuellen Adressraum ein.
 Enthält ein Teil des Zielbereichs im aktuellen Adressraum bereits Seitenrahmen,
 so werden diese nicht überschrieben (entsprechend wird die Anzahl der gemappten
 Pages im Rückgabewert re.
 Der Zielbereich darf weder ganz, noch teilweise im Kernel-Adressraum liegen.
 Er darf ebenfalls nicht an Adresse 0 und auch nicht im Bereich des
\emph on
 thread local storage
\emph default
 liegen.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Um einen zu langen Aufenthalt des Systems im Kernel-Mode zu verhindern,
 kann nur eine plattformspezifische Menge an Speicherseiten auf einmal alloziier
t werden.
 Für größere Bereiche sind mehrere Allokationen in Folge erforderlich.
 Die Anzahl der maximal alloziierbaren Seiten kann aus der Hauptinfopage
 entnommen werden.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ENOUGH_MEMORY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Es steht nicht genug Speicher zur Verfügung.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_SYSCALL_RESTRICTED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Es können nicht mehr als eine gewisse Anzahl von Seiten (normalerweise 8
 MiB) auf einmal alloziiert werden.
 Es fand keine Operation statt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der Zielbereich lag ganz oder teilweise im Kernel-Adressraum, an Adresse
 0 oder im 
\emph on
thread local storage
\emph default
.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_create_thread
\emph default
 - Neuen Thread erstellen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
sid_t hymk_create_thread(void* ip, void* sp)
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
ip Startadresse des neuen Threads
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
sp Anfangsadresse des Stacks des neuen Threads
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
SID des neuen Threads
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Erzeugt einen neuen Thread, der Anfangs noch durch 
\emph on
freeze_subject
\emph default
 eingefroren ist.
 Dieser neue Thread erbt von dem Thread, der ihn durch diesen Aufruf erstellt
 hat, dessen statische Priorität und dessen Schedulingklasse.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ENOUGH_MEMORY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Es steht nicht genug Speicher zur Verfügung.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_create_process
\emph default
 - Neuen Prozess erstellen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
sid_t hymk_create_process(void* ip, void* sp);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
ip Startadresse des neuen Threads
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
sp Anfangsadresse des Stacks des neuen Threads
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
SID des Controller-Threads des neuen Prozesses
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Erzeugt einen neuen Prozess mit leerem virtuellem Adressraum und richtet
 für ihn einen neuen Thread ein, der durch 
\emph on
freeze_subject 
\emph default
eingefroren ist, aber vom Erzeugerprozess gesendete map-Operationen gestattet.
 Der neue Thread erbt dabei sie statische Priorität und die Schedulingklasse
 seines Erzeugers.
 Der neue Thread wird automatisch als 
\emph on
controller thread
\emph default
 des neuen Prozesses verwendet.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ENOUGH_MEMORY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Es steht nicht genug Speicher zur Verfügung.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_set_controller
\emph default
 - Controller-Thread festlegen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_set_controller(sid_t ctl);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
ctl SID des neuen Controller-Threads
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Legt den Controller-Thread des aktuellen Prozesses fest.
 Der Thread muss selbstverständlich ein Thread des selben Prozesses sein.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die übergebene SID ist ungültig oder beschreibt keinen Thread, der zu diesem
 Prozess gehört.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_destroy_subject
\emph default
 - Subjekt zerstören
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_destroy_subject(sid_t subj);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj SID des betroffenen Prozess- oder Thread-Subjekts
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Vernichtet ein Subjekt 
\emph on
subj
\emph default
 und gibt seine Datenstrukturen frei.
 Die Operation kann grundsätzlich nur von Threads des Paging-Dämons ausgeführt
 werden.
\end_layout

\begin_layout Standard
Ein Prozess-Subjekt wird dabei allerdings nicht unmittelbar aufgelöst, sondern
 durch setzen eines Flags blockiert, so dass dessen Threads nicht mehr ausgeführ
t werden können.
 Dies ist sinnvoll, um die Threads eines Prozesses bereits vollständig und
 irreversibel zu blockieren, um dann Schritt für Schritt dessen Threads
 zu beenden.
 
\end_layout

\begin_layout Standard
Ein Prozess wird erst dann tatsächlich aufgelöst, wenn alle seine Threads
 beendet wurden.
 Der Kernel gibt bei dieser Auflösung nicht die Speicherseiten des Prozesses
 frei - hierfür ist der Paging-Dämon zuständig.
 Der Kernel kümmert sich nur um die Freigabe der Deskriptoren, Seitentabellen
 und Seitenverzeichnisse.
\end_layout

\begin_layout Standard
Ein Thread-Subject wird bei diesem Vorgang tatsächlich beendet und alle
 dessen Datenstrukturen, wie Deskriptor, Kernelstack und 
\emph on
thread local storage
\emph default
 werden dabei vom Kernel freigegeben.
 War der Thread der 
\emph on
controller thread
\emph default
 seines Prozesses, so setzt der Kernel den Zeiger auf den 
\emph on
controller thread
\emph default
 des Prozesses auf 
\emph on
invalid
\emph default
.
 War der Thread der letzte Thread seines Prozesses, so wird ebenfalls der
 Prozess danach aufgelöst (siehe oben).
 
\end_layout

\begin_layout Standard
Ein laufender Thread des Paging-Dämons kann sich nicht selbst beenden, sondern
 muss durch einen anderen Thread des Paging-Dämons beendet werden.
 Dadurch wird unnötige Komplexität im Kernel vermieden und kann gleichzeitig
 eine vernünftige Freigabe des Thread-Stacks im Usermode durch den Paging-Dämon
 realisiert werden.
 
\end_layout

\begin_layout Standard
Versuchte ein anderer Thread sich mit dem zu zerstörenden Thread zu synchronisie
ren, so wird dessen Synchronisierung abgebrochen.
 Dies betrifft jedoch nur Threads, die sich ausdrücklich mit einem anderen
 Thread synchronisieren.
 Bei Synchronisation mit einem Prozess wird selbst bei Beendigung von diesem
 keine Aktion getätigt.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Nur Paging-Dämon.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_PAGING_DAEMON
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Nur der Paging-Dämon darf diesen Systemaufruf tätigen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendete SID ist ungültig.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_chg_root
\emph default
 - Root-Rechte eines Prozesses ändern
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_chg_root(sid_t subj, int mode);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj SID des Prozess-Subjekt, das seinen root-Modus ändern soll.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
mode Subjekt
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
0 soll den Root-Modus verlassen.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
1 soll den Root-Modus betreten.
\end_layout

\end_deeper
\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Wechselt einen Prozess 
\emph on
subj
\emph default
 in den Root-Modus oder entfernt ihn aus diesem.
 Beim Entfernen aus dem Root-Modus werden die I/O-Zugriffsrechte automatisch
 zurückgesetzt, d.h.
 der Zugriff auf I/O-Ports ist gesperrt.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Diese Operation ist nur Root-Prozessen erlaubt.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_ACCESS_DENIED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendete Prozess-SID ist ungültig.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_freeze_subject
\emph default
 - Subjekt einfrieren.
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_freeze_subject(sid_t subj);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj SID des Threadsubjekts, das eingefroren werden soll.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Friert einen Thread 
\emph on
subj 
\emph default
ein.
 Dabei kann auch der aktuelle Thread eingefroren werden.
\end_layout

\begin_layout Standard
Wichtig ist, dass ein mehrfaches Einfrieren eines Subjekts dazu führt, dass
 es auch wieder mehrfach mit 
\emph on
hymk_awake_subject
\emph default
 aufgeweckt werden muss.
 
\end_layout

\begin_layout Standard
Das Einfrieren von Prozessen ist derzeit nicht möglich.
 Ebenfalls können Threads, die sich im Kernel-Modus befinden (z.B.
 weil sie auf eingehende Synchronisierungen warten) nicht eingefroren werden.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Diese Operation ist nur Root-Prozessen vorbehalten.
 Threads des gleichen Prozesses können diese Operationen ebenfalls untereinander
 anwenden.
 Der Zugriff auf den Kernel-Thread wird verweigert.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_ACCESS_DENIED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendete Ziel-SID ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ENOUGH_MEMORY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Das Subjekt wurde bereits so oft eingefroren, dass der zuständige Counter
 nicht mehr ausreicht.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_awake_subject
\emph default
 - Weckt ein Subjekt wieder auf
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_awake_subject(sid_t subj);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj SID des Threadsubjekt, das aufgeweckt werden soll.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Weckt einen eingefrorenen Thread 
\emph on
subj
\emph default
 wieder auf.
 Wichtig ist, dass jedes 
\emph on
freeze_subject
\emph default
 auf ein Subjekt ein 
\emph on
awake_subject
\emph default
 benötigt.
 D.h.
 wurde ein Subjekt zweimal eingefroren, muss es auch zwei Mal wieder aufgeweckt
 werden, ehe der Kernel es wieder in die Run-Queue des Schedulers aufnimmt.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Diese Operation ist nur Root-Prozessen vorbehalten.
 Threads des gleichen Prozesses können diese Operationen ebenfalls untereinander
 anwenden.
 Der Zugriff auf den Kernel-Thread wird verweigert.
 Das Aufwecken von Prozessen ist derzeit nicht möglich, kann aber ggf.
 in späteren Versionen eingeführt werden.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_ACCESS_DENIED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendete Ziel-SID ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Das betroffene Subjekt ist bereits aktiv.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_yield_thread
\emph default
 - CPU-Zeit abgeben
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_yield_thread(sid_t recv);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
recv SID des Threads, der den Rest der effektiven Priorität empfangen soll
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Gibt die restliche effektive Priorität (also die CPU Zeit) des aktuellen
 Threads ab, so dass dieser die CPU solange verliert, bis alle anderen rechenber
eiten Threads vom Scheduler einmal aufgerufen worden sind
\begin_inset Foot
status collapsed

\begin_layout Standard
Wenn ein Thread, der mit 
\emph on
yield_thread
\emph default
 kurzzeitig die CPU abgegeben hat, von einem anderen Thread wieder ausreichend
 effektive Priorität über dessen 
\emph on
yield_thread
\emph default
-Operation erhält, so kann es passieren, dass er erneut aktiviert wird,
 bevor alle anderen Threads vom Scheduler bearbeitet wurden.
\end_layout

\end_inset

.
 Die restliche effektive Priorität kann dabei auch an einen anderen Thread
 
\emph on
recv 
\emph default
weitergegeben werden, so dass dessen Chance erhöht wird, sofort nach dem
 aktuellen Thread aktiviert zu werden.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendete Ziel-SID ist ungültig.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_set_priority
\emph default
 - Threadpriorität ändern
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_set_priority(sid_t subj, int prior, int cls);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj SID des betroffenen Threads
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
prior Neue Priorität (Zahl von 0 bis 40)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
class Neue Schedulingklasse
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
0 SCHED_REGULAR
\end_layout

\end_deeper
\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Ändert die statische Priorität eines Threads 
\emph on
subj
\emph default
 auf 
\emph on
prior
\emph default
, sowie dessen Scheduling-Klasse auf 
\emph on
cls
\emph default
 (derzeit existiert nur eine).
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Nur Root-Prozesse können die Priorität oder die Scheduling-Klasse anheben.
 Andere Prozesse können sie nur absenken.
 Der Zugriff auf den Kernel-Thread wird verweigert.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_ACCESS_DENIED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendete Ziel-SID ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendete Priorität oder Scheduling-Klasse ist ungültig.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_allow
\emph default
 - Speicheroperation zulassen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_allow(sid_t subj, sid_t me, void* adr, unsigned pages, int op);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj SID die für die Erlaubnis verwendet werden soll.
 Dies muss eine Thread-SID, eine Prozess-SID oder eine Prozessgruppen-SID
 sein.
 Wird 
\emph on
null
\emph default
 oder 
\emph on
invalid 
\emph default
verwendet, ist der Zugriff gesperrt.
 
\emph on
kernel
\emph default
 hat keine Wirkung.
 Die SID muss nicht gültig sein.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
me SID des Threads, der die Allow-Operation ausführen soll (wichtig für
 Root-Threads).
 Soll die Operation im Namen des aktuellen Threads ausgeführt werden (normalfall
), so wird einfach 
\emph on
invalid
\emph default
 als SID übergeben.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
adr Startadresse des für die Operation genehmigten Bereichs
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pages Anzahl der Seiten des Bereichs
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
op Erlaubte Operationen (als Flags, die parallel gesetzt werden können):
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="3">
<features>
<column alignment="block" valignment="top" width="4cm">
<column alignment="block" valignment="top" width="1.5cm">
<column alignment="block" valignment="top" width="6cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ALLOW_MAP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Es ist erlaubt Seiten in den festgelegten Adressrbereich des virtuellen
 Adressraums des betroffenen Threads hineinzumappen (die Operation 
\emph on
move
\emph default
 eingeschlossen).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ALLOW_UNMAP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Es ist erlaubt Seiten aus dem festgelegten Adressbereich des virtuellen
 Adressraums des betroffenen Threads zu entfernen oder die Zugriffsrechte
 darauf einzuschränken.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Führt auf einen Thread die 
\emph on
allow
\emph default
 Operation aus, so dass auf einen bestimmten Speicherbereich des virtuellen
 Adressraums diees Threads die Speicheroperationen 
\emph on
map
\emph default
,
\bar under
 
\emph on
\bar default
unmap
\emph default
 und 
\emph on
move
\emph default
 angewendet werden können.
 Normalerweise führt ein Thread die Operation nur für sich selbst aus und
 setzt dabei als Ziel-SID auch 
\emph on
invalid
\emph default
.
 Die Freigabe des Kernel-Adressraums ist nicht zulässig.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Die 
\emph on
allow
\emph default
 Operation kann normalerweise nur auf den eigenen Thread angewendet werden.
 Root-Prozesse haben das Recht die Operation auch auf andere Threads anzuwenden.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_ACCESS_DENIED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendeten Operationsflags sind ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Zieladresse überschneidet sich mit dem Kernel-Adressraum.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_map
\emph default
 - Speicherseiten mappen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_map(sid_t subj, void* adr, unsigned pages, int flags, uintptr_t
 dest_offset);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj SID des Threads auf den die Operation angewandt werden soll
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
adr Startadresse des Quellbereichs im eigenen Adressraum
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pages Anzahl der Seiten des Bereichs
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
flags Flags:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features>
<column alignment="block" valignment="top" width="5cm">
<column alignment="block" valignment="top" width="1.5cm">
<column alignment="block" valignment="top" width="4cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MAP_READ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Seiten können ausgelesen werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MAP_WRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Seiten können beschrieben werden (auf x86 impliziert dies MAP_READ).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MAP_EXECUTABLE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Speicherseiten können ausgeführt werden (auf x86 nicht verfügbar).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MAP_COPYONWRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Speicherseiten sind für das Copy-On-Write Verfahren markiert, so dass
 effektiv kein gemeinsamer Speicherbereich, sondern eine Kopie des Speicherberei
chs entsteht.
 Hierbei werden ebenfalls die Seiten des Quellbereich für Copy-On-Write
 markiert!
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout List
\labelwidthstring 00.00.0000
dest_offset Offset im Zielbereich
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Richtet eine gemeinsame Speichernutzung aus dem gegebenen Speicherbereich
 des Adressraums des aktuellen Threads unter bestimmten Flags mit dem Adressraum
 eines Ziel-Threads ein.
 Das mappen aus dem Kernel-Adressraum ist nicht zulässig.
 Ebenfalls dürfen bestehende Zugriffsbeschränkungen des eigenen Adressraums
 (z.B.
 Nur-Lesbarkeit eines Adressbereichs) nur dann im Zieladressraum durch die
 Flags aufgehoben werden, wenn der aufrufende Thread Teil eines Root-Prozesses
 ist (d.h.
 ist der zu mappende Bereich 
\begin_inset Quotes gld
\end_inset

nur lesbar
\begin_inset Quotes grd
\end_inset

, so können nicht-Root-Prozesse ihn auch nur als 
\begin_inset Quotes gld
\end_inset

nur lesbar
\begin_inset Quotes grd
\end_inset

 weitergeben).
 
\end_layout

\begin_layout Standard
Ist eine Seite im Quellmapping für Copy-On-Write markiert, so wird diese
 Eigenschaft an den Zieladressraum weitervererbt - d.h.
 es entsteht kein gemeinsamer Speicherbereich, sondern lediglich eine Kopie
 des Bereichs.
 Hier sollten Maßnahmen im Benutzermodus verwendet werden (z.B.
 die Verwendung 
\begin_inset Quotes gld
\end_inset

frisch
\begin_inset Quotes grd
\end_inset

 alloziierter Speicherseiten für Mappings), um etwaige Probleme mit dem
 Copy-On-Write-Mechanismus zu vermeiden.
\end_layout

\begin_layout Standard
Enthält ein Teil des Zieladressraums bereits Seitenrahmen, so bleiben diese
 bestehen.
 D.h.
 bevor in einen Bereich gemapt werden kann, muss sichergestellt sein, dass
 er keine Speicherseiten mehr enthält (dies ist die Aufgabe einer sauberen
 Speicherverwaltung im Benutzermodus).
 
\end_layout

\begin_layout Standard
Die möglichen Zugriffsrechte auf eine Speicherseite können nicht angehoben
 werden - d.h.
 ist eine Seite nur lesbar, kann sich nicht weider beschreibbar gemacht
 werden.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Die Operation erfordert, dass auf die Gegenseite zuvor eine 
\emph on
allow
\emph default
-Operation ausgeführt wurde, so dass die Zieladresse und die maximale Zielgröße
 und die Zugriffsbeschränkungen bekannt sind.
 Der Quellbereich muss in den Zielbereich hineinpassen.
 Der Zugriff kann verweigert werden, wenn die Zugriffsbeschränkungen der
 vorausgegangene 
\emph on
allow
\emph default
-Operation den Zugriff nicht gestattet hat.
\end_layout

\begin_layout Standard
Grundsätzlich kann nur eine bestimmte, plattformspezifische Anzahl von Speichers
eiten auf einmal von der 
\emph on
map
\emph default
-Operation verarbeitet werden.
 Der entsprechende Wert kann aus der Hauptinfoseite entnommen werden.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_ACCESS_DENIED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendete Ziel-SID ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_SYSCALL_RESTRICTED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Es kann nur eine gewisse Anzahl von Seiten (normalerweise 8 MiB) auf einmal
 von 
\emph on
map
\emph default
 verarbeitet werden.
 Es fand keine Operation statt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendeten Operationsflags sind ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Quelladresse überschneidet sich mit dem Kernel-Adressraum.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_unmap
\emph default
 - Mapping reduzieren/aufheben
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_unmap(sid_t subj, void* adr, unsigned pages, int flags);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj SID des Threads auf den die Operation angewandt werden soll.
 Wird 
\emph on
null
\emph default
 oder 
\emph on
invalid
\emph default
 übergeben, wird als Ziel der aktuelle Thread verwendet.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
adr Startadresse des für die Operation genehmigten Zielbereichs
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pages Anzahl der Seiten des Bereichs
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
flags Flags:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features>
<column alignment="block" valignment="top" width="5cm">
<column alignment="block" valignment="top" width="1.5cm">
<column alignment="block" valignment="top" width="4cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
UNMAP_COMPLETE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Seiten sollen vollständig aus dem Adressraum entfernt werden.
 Der physikalische Seitenrahmen wird freigegeben, wenn kein anderer Prozess
 ihn mehr benutzt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
UNMAP_AVAILABLE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Speicherseiten sollen als nicht-vorhanden markiert werden.
 Der physikalische Seitenrahmen wird freigegeben, wenn kein anderer Prozess
 ihn mehr benutzt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
UNMAP_WRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Seiten dürfen nur noch ausgelesen werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
UNMAP_EXECUTE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Speicherseiten dürfen nicht mehr ausgeführt werden.
 (auf x86 ineffektiv)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Entfernt einen Speicherbereich aus einem Adressraum, der einem bestimmten
 Thread zugeordnet ist oder reduziert zumindest die Zugriffsrechte auf diesen.
 Der Zugriff auf den Kernel-Adressraum ist auf keinen Fall gestattet.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Die Operation erfordert, dass auf die Gegenseite zuvor eine 
\emph on
allow
\emph default
-Operation ausgeführt wurde, so dass die Zieladresse und die Zugriffsbeschränkun
gen bekannt sind.
 Die Zieladresse und die Größe müssen in dem Bereich liegen, der von der
 
\emph on
allow
\emph default
-Operation freigegeben wurde.
 Der Zugriff kann verweigert werden, wenn die Zugriffsbeschränkungen der
 vorausgegangene 
\emph on
allow
\emph default
-Operation den Zugriff nicht gestattet hat.
\end_layout

\begin_layout Standard
Führt ein root-Prozess diese Operation aus, so kann er auch ohne vorangegangene
 
\emph on
allow
\emph default
-Operation 
\emph on
unmap
\emph default
 ausführen und ebenfalls den Zielbereich übertreten.
 Gleiches gilt ebenfalls, wenn ein Thread die Operation auf sich selbst
 ausführt.
\end_layout

\begin_layout Standard
Führt ein Thread die unmap-Operation auf sich selbst aus, kann dies ohne
 ein vorausgegangenes 
\emph on
allow
\emph default
 geschehen.
\end_layout

\begin_layout Standard
Es kann ferner nur eine gewisse, plattformspezifische Anzahl von Speicherseiten
 auf einmal von der 
\emph on
unmap
\emph default
-Operation verarbeitet werden.
 Die Anzahl kann aus der Hauptinfopage entnommen werden.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_ACCESS_DENIED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendete Ziel-SID ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_SYSCALL_RESTRICTED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Es sollten mehr als die plattformspezifische Anzahl von Seiten (normalerweise
 8 MiB) auf einmal mit 
\emph on
unmap
\emph default
 bearbeitet werden.
 Es fand keine Verarbeitung statt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendeten Operationsflags sind ungültig oder die Zieladresse überschneidet
 sich mit dem Kernel-Adressraum.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_move
\emph default
 - Speicherseiten zwischen Prozessen verschieben
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_move(sid_t subj, void* adr, unsigned pages, int flags, uintptr_t
 dest_offset);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj SID des Threads auf den die Operation angewandt werden soll
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
adr Startadresse des Quellbereichs im lokalen Adressraum
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pages Anzahl der Seiten des Bereichs
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
flags Flags:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features>
<column alignment="block" valignment="top" width="5cm">
<column alignment="block" valignment="top" width="1.5cm">
<column alignment="block" valignment="top" width="4cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MAP_READ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Seiten können ausgelesen werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MAP_READWRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Seiten können beschrieben werden (auf x86 impliziert dies MAP_READ).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MAP_EXECUTABLE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Speicherseiten können ausgeführt werden (auf x86 nicht verfügbar).
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout List
\labelwidthstring 00.00.0000
dest_offset Offset im Zielbereich
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Verschiebt einen Adressraum des aktuellen Threads in einen Adressraum eines
 bestimmten Ziel-Threads.
 Das Verschieben ist eine Kombinierte 
\emph on
map
\emph default
 Operation auf den Zieladressraum und eine im Anschluß stattfindende 
\emph on
unmap
\emph default
 Operation auf den lokalen Adressraum.
 Das Verschieben von Teilen des Kernel-Adressraums ist nicht zulässig.
 Enthält ein Teil des Zieladressraums bereits Seitenrahmen, so werden diese
 freigegeben und der Bereich durch das Quellmapping ersetzt.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Die Operation erfordert, dass auf die Gegenseite zuvor eine 
\emph on
allow
\emph default
-Operation ausgeführt wurde, so dass die Zieladresse und die Zugriffsbeschränkun
gen bekannt sind.
 Der Quellbereich muss in den Zielbereich passen, der von der 
\emph on
allow
\emph default
-Operation freigegeben wurde.
 Der Zugriff kann verweigert werden, wenn die Zugriffsbeschränkungen der
 vorausgegangene 
\emph on
allow
\emph default
-Operation den Zugriff nicht gestattet hat.
 
\end_layout

\begin_layout Standard
Für die Anzahl der Seiten, die von 
\emph on
move 
\emph default
maximal auf einmal verarbeitet werden können, gilt das gleiche, wie für
 
\emph on
map
\emph default
 und 
\emph on
unmap
\emph default
.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_ACCESS_DENIED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendete Ziel-SID ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_SYSCALL_RESTRICTED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Es sollten mehr als die plattformspezifische Anzahl von Seiten (normalerweise
 8 MiB) auf einmal mit 
\emph on
move
\emph default
 bearbeitet werden.
 Es fand keine Verarbeitung statt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendeten Operationsflags sind ungültig oder die Zieladresse überschneidet
 sich mit dem Kernel-Adressraum.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_sync
\emph default
 - Threads synchronisieren 
\begin_inset LatexCommand \label{sub:sync}

\end_inset


\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
sid_t hymk_sync(sid_t subj, long tm, int resync);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj SID der Gegenseite
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
tm Länge des Timeouts (ungefähr) in Millisekunden (0 = kein Warten, 0xFFFFFFFF
 = unendlich)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
resync Anzahl der Resync-Vorgänge (0 = kein Resync)
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
SID des Threads, der sich mit dem Aufrufer synchronisiert hat
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Synchronisiert zwei Threads innerhalb eines bestimmten (oder unendlichen)
 Timeouts miteinander - d.h.
 der Aufrufer wartet, bis ein gewählter anderer Thread (definiert durch
 den Parameter 
\emph on
SID
\emph default
) ebenfalls 
\emph on
sync
\emph default
 mit seiner SID aufruft.
 Wird das Timeout 0 gesetzt, wird nicht auf die Gegenseite gewartet, sondern
 die Operation sofort wieder abgebrochen.
\end_layout

\begin_layout Standard
Das Warten geschieht weitgehend passiv, so dass durch den Wartevorgang keine
 oder relativ wenig CPU-Zeit verbraucht wird.
 Der Kernel kann zur Umsetzung interne Warteschleifen einsetzen.
 Gewartet wird solange, bis die Gegenseite die Synchronisierung gestattet
 - d.h.
 auch wenn die Gegenseite sich derzeit auf eingehende Synchronisationen
 wartet, aber die Synchronisation mit dem Aufrufer verbietet, wartet der
 Aufrufer, bis sich dieser Zustand der Gegenseite ändert oder das Timeout
 abläuft.
\end_layout

\begin_layout Standard
Die Gegenseite, auf die ein Thread wartet, kann
\end_layout

\begin_layout Itemize
ein bestimmter Thread (definiert durch dessen Thread-SID) sein
\end_layout

\begin_layout Itemize
ein beliebiger Thread eines bestimmten Prozesses (definiert durch die Prozess-SI
D) sein
\end_layout

\begin_layout Itemize
ein beliebiger Thread aller Prozesse sein, die sich im 
\emph on
root
\emph default
-Modus befinden (definiert durch die 
\emph on
root
\emph default
-SID)
\end_layout

\begin_layout Itemize
ein beliebiger Thread (definiert durch die 
\emph on
everybody
\emph default
-SID) sein
\end_layout

\begin_layout Standard
Wichtig ist hierbei, dass bei einer Synchronisierung grundsätzlich einer
 der beiden Seiten eine konkrete Thread-SID angeben muss, da sonst das Ziel
 nicht genau spezifiziert ist.
\newline
Um unnötige Wechsel zwischen Kernel- und Benutzermo
dus zu vermeiden, kann ein Thread eine automatische Wiederholung des selben
 Synchronisationsvorgangs bei erfolgreicher Synchronisation anordnen.
 In einem Client-Server-System ist es z.B.
 oft der Fall, dass der Client sich zuerst mit dem Worker-Thread des Servers
 synchronisiert, um diesen zu signalisieren, dass ein neuer Auftrag ansteht
 und anschließend auf eingehende Synchronisation des Worker-Threads wartet,
 damit dieser ihm die Fertigstellung des Auftrags signalisiert.
 Durch die automatische Resynchronisierung kann hier ein überflüssiger Wechsel
 zwischen Kernel- und Benutzeradressraum vermieden werden.
\end_layout

\begin_layout Standard
Als Rückgabewert wird dem Aufrufer die Thread-SID der Gegenseite übermittelt,
 die sich tatsächlich synchronisiert hat.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Die Operation erfordert, dass die Gegenseite den Zugriff von einer SID erlaubt,
 die dem jeweiligen aufrufenden Thread zugänglich ist (Thread-SID, Prozess-SID,
 
\emph on
root
\emph default
/
\emph on
everybody
\emph default
).
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_ACCESS_DENIED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendete SID ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendeten Operationsflags sind ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_TIMED_OUT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Das Timeout wurde erreicht.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_RESOURCE_BUSY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Warteschlange für den Ziel-Thread ist voll.
 Ein passives Warten ist derzeit nicht möglich.
 Es wird aktives Warten im Benutzer-Modus empfohlen.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_io_allow
\emph default
 - I/O-Zugriffsrechte freischalten
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_io_allow(sid_t subj, int flags);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj SID des Zielprozesses
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
flags Flags:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="3">
<features>
<column alignment="block" valignment="top" width="5cm">
<column alignment="block" valignment="top" width="1.5cm">
<column alignment="block" valignment="top" width="4cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IO_ALLOW_IRQ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der Prozess hat nun das Recht IRQs zu behandeln, auch wenn er kein Root-Prozess
 ist.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IO_ALLOW_PORTS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der Prozess hat nun das Recht auf I/O-Ports zuzugreifen, auch wenn er kein
 Root-Prozess ist.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Erlaubt einem Nicht-Root-Prozess bestimmte I/O-Systemaufrufe und I/O-Instruktion
en auszuführen, die sonst nur Root-Prozessen vorbehalten sind.
 Dadurch lassen sich Treiber realisieren, die nicht im Root-Modus laufen.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Die Operation kann nur von Root-Prozessen ausgeführt werden.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ROOT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendete Prozess-SID ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendeten Operationsflags sind ungültig.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_io_alloc
\emph default
 - I/O-Speicherbereich alloziieren
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_io_alloc(uintptr_t phys, void* adr, unsigned pages, int flags);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
phys Zu reservierender Quellspeicherbereich
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
adr Zielspeicherbereich des Mappings
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pages Anzahl der zu mappenden Seiten
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
flags Flags:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features>
<column alignment="block" valignment="top" width="5cm">
<column alignment="block" valignment="top" width="1.5cm">
<column alignment="block" valignment="top" width="4cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IOMAP_READ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der gemappte Hardwarespeicherbereich darf ausgelesen werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IOMAP_WRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der gemappte Hardwarespeicherbereich darf beschrieben werden (impliziert
 auf x86 IOMAP_READ).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IOMAP_EXECUTE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der gemappte Hardwarespeicherbereich darf ausgeführt werden (auf x86 ineffektiv).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IOMAP_WITH_CACHE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Aktiviert den Cache beim Mappen (sollte bei den meisten Hardwarespeicherbreichen
 nicht verwendet werden!)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Mappt einen Hardwarespeicherbereich in den Adressraum des aktuellen Prozesses.
 Einige Speicherbereiche, z.B.
 Kernel-Code und Daten, sowie die PBT, FMT und der Page-Buffer können dabei
 nicht gemappt werden.
 Als Ziel kann nicht der Kerneladressraum verwendet werden.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Die Operation kann nur von Root-Prozessen ausgeführt werden.
 Außerdem kann nur eine bestimmte plattformspezifische Anzahl von Seiten
 auf einmal von 
\emph on
io_alloc
\emph default
 verarbeitet werden.
 Die Anzahl kann aus der Hauptinfopage in Erfahrung gebracht werden.
\end_layout

\begin_layout Standard
Bestehende Seitenmappings werden nicht aufgelöst.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ROOT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der verwendete Ziel- oder Quellbereich ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_SYSCALL_RESTRICTED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Es sollten mehr als die plattformspezifische Anzahl von Seiten (normalerweise
 8 MiB) auf einmal mit 
\emph on
io_alloc
\emph default
 bearbeitet werden.
 Es fand keine Verarbeitung statt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendeten Operationsflags sind ungültig.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_recv_irq
\emph default
 - IRQ überwachen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_recv_irq(int irqn);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
irqn Zu überwachender IRQ
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Lässt den aktuellen Thread auf einen eintreffenden IRQ warten.
 Wird während einer laufenden Behandlung des zu überwachenden IRQs dieser
 Aufruf auf denselben oder einen anderen IRQ gestartet, so wird die laufende
 Behandlung damit beendet und erneut auf den genannten IRQ gewartet, sofern
 nicht ein anderer Thread auf den IRQ wartet.
 Der Kernel übernimmt dabei auch die Informierung des PICs.
 Wird als zu überwachender IRQ während einer Behandlung die Nummer 0xFFFFFFFF
 angegeben, so wird die IRQ-Behandlung beendet, ohne auf neue IRQs zu warten.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Die Operation kann nur von Root-Prozessen ausgeführt werden, oder von Prozessen
 denen das Recht der IRQ-Behandlung über 
\emph on
io_allow
\emph default
 zugestanden wurde.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_ACCESS_DENIED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendete IRQ-Nummer ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_RESOURCE_BUSY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der IRQ wird bereits von einem anderen Thread behandelt.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_recv_softints
\emph default
 - Software-Interrupts abgreifen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
int hymk_recv_softints(sid_t subj, long tm, int flags);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj Zu überwachender Thread
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
tm Timeout, (ungefähr) in Millisekunden (0 = kein Timeout, 0xFFFFFFFF unendliche
s Timeout)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
flags Flags
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="3">
<features>
<column alignment="block" valignment="top" width="5cm">
<column alignment="block" valignment="top" width="1.5cm">
<column alignment="block" valignment="top" width="4cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RECV_AWAKE_OTHER
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der zu beobachtende Thread soll beim Start der Beobachtung mit 
\emph on
awake_subject
\emph default
 aufgeweckt werden.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Eingetretener Software-Interrupt
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Überwacht auftretende Software-Interrupts eines Ziel-Threads.
 Tritt ein Software-Interrupt ein, wird dies an den Überwacher weitergemeldet.
 Der Software-Interrupt wird dabei nicht vom Kernel behandelt, sondern der
 überwachende Thread kann die Behandlung durchführen.
 Der überwachte Thread wird zudem mit 
\emph on
freeze_thread
\emph default
 angehalten.
\end_layout

\begin_layout Standard
Für die Operation kann ein Timeout gesetzt werden.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Die Operation kann nur von Root-Prozessen ausgeführt werden.
 Der Zugriff auf den Kernel-Thread wird verweigert.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ROOT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die SID des zu überwachenden Threads ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_TIMED_OUT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Das Timeout endete.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_read_regs
\emph default
 - Register auslesen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
reg_t hymk_read_regs(sid_t subj, int tp);
\end_layout

\begin_layout LyX-Code

\size scriptsize
typedef struct {
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
int regs[SYSTEM_REGREAD_COUNT];
\end_layout

\end_deeper
\begin_layout LyX-Code

\size scriptsize
}reg_t;
\end_layout

\begin_layout LyX-Code

\size scriptsize
/* For x86-Plattforms: */
\end_layout

\begin_layout LyX-Code

\size scriptsize
#define SYSTEM_REGREAD_COUNT 4
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj SID des Threads, dessen Register gelesen werden sollen
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
tp lesender Register-Typus
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features>
<column alignment="block" valignment="top" width="5.5cm">
<column alignment="block" valignment="top" width="1.5cm">
<column alignment="block" valignment="top" width="6cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
REGS_X86_GENERIC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
(1) EAX
\end_layout

\begin_layout Standard
(2) EBX
\end_layout

\begin_layout Standard
(3) ECX
\end_layout

\begin_layout Standard
(4) EDX
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
REGS_X86_INDEX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
(1) ESI
\end_layout

\begin_layout Standard
(2) EDI
\end_layout

\begin_layout Standard
(3) EBP
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
REGS_X86_POINTERS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
(1) ESP
\end_layout

\begin_layout Standard
(2) EIP
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
REGS_X86_EFLAGS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
(1) EFLAGS
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
regs[0] (1)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
regs[1] (2)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
regs[2] (3)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
regs[3] (4)
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Liest einige Register eines Threads aus.
 Hierbei ist anzumerken, dass das Binding dieses Aufrufs plattformabhängig
 ist.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Die Operation kann nur von Root-Prozessen ausgeführt werden.
 Der Zugriff auf den Kernel-Thread wird verweigert.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ROOT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die SID des zu kontrollierenden Threads ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der gewählte Registertyp ist ungültig.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_write_regs
\emph default
 - Register schreiben
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_write_regs(sid_t subj, int tp, reg_t rv);
\end_layout

\begin_layout LyX-Code

\size scriptsize
typedef struct {
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
int regs[SYSTEM_REGREAD_COUNT];
\end_layout

\end_deeper
\begin_layout LyX-Code

\size scriptsize
}reg_t;
\end_layout

\begin_layout LyX-Code

\size scriptsize
/* For x86-Plattforms: */
\end_layout

\begin_layout LyX-Code

\size scriptsize
#define SYSTEM_REGREAD_COUNT 4
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj SID des Threads, in dessen Register geschrieben werden sollen
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
tp Zu schreibender Register-Typus
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features>
<column alignment="block" valignment="top" width="5.5cm">
<column alignment="block" valignment="top" width="1.5cm">
<column alignment="block" valignment="top" width="6cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
REGS_X86_GENERIC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
(1) EAX
\end_layout

\begin_layout Standard
(2) EBX
\end_layout

\begin_layout Standard
(3) ECX
\end_layout

\begin_layout Standard
(4) EDX
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
REGS_X86_INDEX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
(1) ESI
\end_layout

\begin_layout Standard
(2) EDI
\end_layout

\begin_layout Standard
(3) EBP
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
REGS_X86_POINTERS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
(1) ESP
\end_layout

\begin_layout Standard
(2) EIP
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
REGS_X86_EFLAGS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
(1) EFLAGS
\end_layout

\begin_layout Standard
Nur Änderung des ersten Bytes möglich
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout List
\labelwidthstring 00.00.0000
regs Zu schreibende Register (rv.regs[0] - rv.regs[3] werden auf (1) - (4)
 abgebildet).
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Ändert die Register eines Threads.
 Hierbei ist anzumerken, dass das Binding dieses Aufruf stark plattformabhängig
 ist.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Die Operation kann nur von Root-Prozessen ausgeführt werden.
 Der Zugriff auf den Kernel-Thread wird verweigert.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ROOT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die SID des zu kontrollierenden Threads ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der gewählte Registertyp ist ungültig.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hymk_set_paged
\emph default
 - Prozess als Paging-Dämon erklären
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hymk_set_paged(void);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Legt den aktuellen Thread als Paging-Dämon-Thread fest.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Die Operation kann nur von Root-Prozessen ausgeführt werden.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ROOT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_PAGING_DAEMON
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Es ist bereits ein Thread als Paging-Dämon eingetragen.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection
hymk_test_page
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
unsigned hymk_test_page(uintptr_t adr, sid_t sid);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
adr Adresse der Speicherseite
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
sid Prozess SID des Zieladressraums (
\emph on
invalid
\emph default
 oder 
\emph on
null
\emph default
 für den aktuellen Adressraum)
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Zugriffsflags der Page:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features>
<column alignment="block" valignment="top" width="5.5cm">
<column alignment="block" valignment="top" width="2cm">
<column alignment="block" valignment="top" width="6cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
PGA_READ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Lesen ist erlaubt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
PGA_WRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Schreiben ist erlaubt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
PGA_EXECUTE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ausführen ist erlaubt.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Gibt die Zugriffsrechte auf eine Speicherseite in einem Zieladressraum zurück.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Die Operation kann nur von Root-Prozessen auf fremde Adressräume ausgeführt
 werden.
 Die Prüfung des eigenen Adressraums ist unbeschränkt.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ROOT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die SID des Zieladressraums ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die angegebene Adresse liegt im Kernel-Adressraum.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Section
Kapselung plattformspezifischer Kernel-Schnittstellen
\end_layout

\begin_layout Subsection

\emph on
hysys_alloc_pages
\emph default
 - Speicherseiten alloziieren
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/system.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hysys_alloc_pages(void* adr, unsigned pages);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
adr Startadresse des Mapping
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pages Anzahl der zu reservierenden Speicherseiten
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Reserviert 
\emph on
pages
\emph default
 freie Seitenrahmen und fügt sie an der festgelegten Startadresse 
\emph on
adr
\emph default
 im aktuellen virtuellen Adressraum ein.
 Enthält ein Teil des Zielbereichs im aktuellen Adressraum bereits Seitenrahmen,
 so werden diese nicht überschrieben.
 Der Zielbereich darf weder ganz, noch teilweise im Kernel-Adressraum liegen.
 Er darf ebenfalls nicht an Adresse 0 und auch nicht im Bereich des
\emph on
 thread local storage
\emph default
 liegen.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Dieser Aufruf hat keine Einschränkungen bei der Anzahl von Speicherseiten,
 die auf einen Aufruf gleichzeitig verarbeitet werden können.
 Er kapselt dies durch mehrfaches Aufrufen von 
\emph on
hymk_alloc_pages.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ENOUGH_MEMORY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Es steht nicht genug Speicher zur Verfügung.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der Zielbereich lag ganz oder teilweise im Kernel-Adressraum, an Adresse
 0 oder im 
\emph on
thread local storage
\emph default
.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hysys_io_alloc
\emph default
 - I/O-Speicherbereich alloziieren
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/system.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hysys_io_alloc(uintptr_t phys, void* adr, unsigned pages, int flags);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
phys Zu reservierender Quellspeicherbereich
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
adr Zielspeicherbereich des Mappings
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pages Anzahl der zu mappenden Seiten
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
flags Flags:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features>
<column alignment="block" valignment="top" width="5cm">
<column alignment="block" valignment="top" width="1.5cm">
<column alignment="block" valignment="top" width="4cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IOMAP_READ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der gemappte Hardwarespeicherbereich darf ausgelesen werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IOMAP_WRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der gemappte Hardwarespeicherbereich darf beschrieben werden (impliziert
 auf x86 IOMAP_READ).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IOMAP_EXECUTE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der gemappte Hardwarespeicherbereich darf ausgeführt werden (auf x86 ineffektiv).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IOMAP_WITH_CACHE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Aktiviert den Cache beim Mappen (sollte bei den meisten Hardwarespeicherbreichen
 nicht verwendet werden!)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Mappt einen Hardwarespeicherbereich in den Adressraum des aktuellen Prozesses.
 Einige Speicherbereiche, z.B.
 Kernel-Code und Daten, sowie die PBT, FMT und der Page-Buffer können dabei
 nicht gemappt werden.
 Als Ziel kann nicht der Kerneladressraum verwendet werden.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Dieser Aufruf hat keine Einschränkungen bei der Anzahl von Speicherseiten,
 die auf einen Aufruf gleichzeitig verarbeitet werden können.
 Er kapselt dies durch mehrfaches Aufrufen von 
\emph on
hymk_io_alloc.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ROOT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der verwendete Ziel- oder Quellbereich ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendeten Operationsflags sind ungültig.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hysys_map
\emph default
 - Speicherseiten mappen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/hymk.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hysys_map(sid_t subj, void* adr, unsigned pages, int flags, uintptr_t
 dest_offset);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj SID des Threads auf den die Operation angewandt werden soll
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
adr Startadresse des Quellbereichs im eigenen Adressraum
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pages Anzahl der Seiten des Bereichs
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
flags Flags:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features>
<column alignment="block" valignment="top" width="5cm">
<column alignment="block" valignment="top" width="1.5cm">
<column alignment="block" valignment="top" width="4cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MAP_READ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Seiten können ausgelesen werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MAP_WRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Seiten können beschrieben werden (auf x86 impliziert dies MAP_READ).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MAP_EXECUTABLE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Speicherseiten können ausgeführt werden (auf x86 nicht verfügbar).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MAP_COPYONWRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Speicherseiten sind für das Copy-On-Write Verfahren markiert, so dass
 effektiv kein gemeinsamer Speicherbereich, sondern eine Kopie des Speicherberei
chs entsteht.
 Hierbei werden ebenfalls die Seiten des Quellbereich für Copy-On-Write
 markiert!
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout List
\labelwidthstring 00.00.0000
dest_offset Offset im Zielbereich
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Richtet eine gemeinsame Speichernutzung aus dem gegebenen Speicherbereich
 des Adressraums des aktuellen Threads unter bestimmten Flags mit dem Adressraum
 eines Ziel-Threads ein.
 Das mappen aus dem Kernel-Adressraum ist nicht zulässig.
 Ebenfalls dürfen bestehende Zugriffsbeschränkungen des eigenen Adressraums
 (z.B.
 Nur-Lesbarkeit eines Adressbereichs) nur dann im Zieladressraum durch die
 Flags aufgehoben werden, wenn der aufrufende Thread Teil eines Root-Prozesses
 ist (d.h.
 ist der zu mappende Bereich 
\begin_inset Quotes gld
\end_inset

nur lesbar
\begin_inset Quotes grd
\end_inset

, so können nicht-Root-Prozesse ihn auch nur als 
\begin_inset Quotes gld
\end_inset

nur lesbar
\begin_inset Quotes grd
\end_inset

 weitergeben).
 
\end_layout

\begin_layout Standard
Ist eine Seite im Quellmapping für Copy-On-Write markiert, so wird diese
 Eigenschaft an den Zieladressraum weitervererbt - d.h.
 es entsteht kein gemeinsamer Speicherbereich, sondern lediglich eine Kopie
 des Bereichs.
 Hier sollten Maßnahmen im Benutzermodus verwendet werden (z.B.
 die Verwendung 
\begin_inset Quotes gld
\end_inset

frisch
\begin_inset Quotes grd
\end_inset

 alloziierter Speicherseiten für Mappings), um etwaige Probleme mit dem
 Copy-On-Write-Mechanismus zu vermeiden.
\end_layout

\begin_layout Standard
Enthält ein Teil des Zieladressraums bereits Seitenrahmen, so bleiben diese
 bestehen.
 D.h.
 bevor in einen Bereich gemapt werden kann, muss sichergestellt sein, dass
 er keine Speicherseiten mehr enthält (dies ist die Aufgabe einer sauberen
 Speicherverwaltung im Benutzermodus).
 
\end_layout

\begin_layout Standard
Die möglichen Zugriffsrechte auf eine Speicherseite können nicht angehoben
 werden - d.h.
 ist eine Seite nur lesbar, kann sich nicht weider beschreibbar gemacht
 werden.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Die Operation erfordert, dass auf die Gegenseite zuvor eine 
\emph on
allow
\emph default
-Operation ausgeführt wurde, so dass die Zieladresse und die maximale Zielgröße
 und die Zugriffsbeschränkungen bekannt sind.
 Der Quellbereich muss in den Zielbereich hineinpassen.
 Der Zugriff kann verweigert werden, wenn die Zugriffsbeschränkungen der
 vorausgegangene 
\emph on
allow
\emph default
-Operation den Zugriff nicht gestattet hat.
\end_layout

\begin_layout Standard
Dieser Aufruf hat keine Einschränkungen bei der Anzahl von Speicherseiten,
 die auf einen Aufruf gleichzeitig verarbeitet werden können.
 Er kapselt dies durch mehrfaches Aufrufen von 
\emph on
hymk_map.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_ACCESS_DENIED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendete Ziel-SID ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendeten Operationsflags sind ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Quelladresse überschneidet sich mit dem Kernel-Adressraum.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hysys_unmap
\emph default
 - Mapping reduzieren/aufheben
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/system.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hysys_unmap(sid_t subj, void* adr, unsigned pages, int flags);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj SID des Threads auf den die Operation angewandt werden soll.
 Wird 
\emph on
null
\emph default
 oder 
\emph on
invalid
\emph default
 übergeben, wird als Ziel der aktuelle Thread verwendet.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
adr Startadresse des für die Operation genehmigten Zielbereichs
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pages Anzahl der Seiten des Bereichs
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
flags Flags:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features>
<column alignment="block" valignment="top" width="5cm">
<column alignment="block" valignment="top" width="1.5cm">
<column alignment="block" valignment="top" width="4cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
UNMAP_COMPLETE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Seiten sollen vollständig aus dem Adressraum entfernt werden.
 Der physikalische Seitenrahmen wird freigegeben, wenn kein anderer Prozess
 ihn mehr benutzt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
UNMAP_AVAILABLE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Speicherseiten sollen als nicht-vorhanden markiert werden.
 Der physikalische Seitenrahmen wird freigegeben, wenn kein anderer Prozess
 ihn mehr benutzt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
UNMAP_WRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Seiten dürfen nur noch ausgelesen werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
UNMAP_EXECUTE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Speicherseiten dürfen nicht mehr ausgeführt werden.
 (auf x86 ineffektiv)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Entfernt einen Speicherbereich aus einem Adressraum, der einem bestimmten
 Thread zugeordnet ist oder reduziert zumindest die Zugriffsrechte auf diesen.
 Der Zugriff auf den Kernel-Adressraum ist auf keinen Fall gestattet.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Die Operation erfordert, dass auf die Gegenseite zuvor eine 
\emph on
allow
\emph default
-Operation ausgeführt wurde, so dass die Zieladresse und die Zugriffsbeschränkun
gen bekannt sind.
 Die Zieladresse und die Größe müssen in dem Bereich liegen, der von der
 
\emph on
allow
\emph default
-Operation freigegeben wurde.
 Der Zugriff kann verweigert werden, wenn die Zugriffsbeschränkungen der
 vorausgegangene 
\emph on
allow
\emph default
-Operation den Zugriff nicht gestattet hat.
\end_layout

\begin_layout Standard
Führt ein root-Prozess diese Operation aus, so kann er auch ohne vorangegangene
 
\emph on
allow
\emph default
-Operation 
\emph on
unmap
\emph default
 ausführen und ebenfalls den Zielbereich übertreten.
 Gleiches gilt ebenfalls, wenn ein Thread die Operation auf sich selbst
 ausführt.
\end_layout

\begin_layout Standard
Führt ein Thread die unmap-Operation auf sich selbst aus, kann dies ohne
 ein vorausgegangenes 
\emph on
allow
\emph default
 geschehen.
\end_layout

\begin_layout Standard
Dieser Aufruf hat keine Einschränkungen bei der Anzahl von Speicherseiten,
 die auf einen Aufruf gleichzeitig verarbeitet werden können.
 Er kapselt dies durch mehrfaches Aufrufen von 
\emph on
hymk_unmap.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_ACCESS_DENIED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendete Ziel-SID ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendeten Operationsflags sind ungültig oder die Zieladresse überschneidet
 sich mit dem Kernel-Adressraum.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hysys_move
\emph default
 - Speicherseiten zwischen Prozessen verschieben
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/system.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void hysys_move(sid_t subj, void* adr, unsigned pages, int flags, uintptr_t
 dest_offset);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
subj SID des Threads auf den die Operation angewandt werden soll
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
adr Startadresse des Quellbereichs im lokalen Adressraum
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pages Anzahl der Seiten des Bereichs
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
flags Flags:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features>
<column alignment="block" valignment="top" width="5cm">
<column alignment="block" valignment="top" width="1.5cm">
<column alignment="block" valignment="top" width="4cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MAP_READ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Seiten können ausgelesen werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MAP_READWRITE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Seiten können beschrieben werden (auf x86 impliziert dies MAP_READ).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MAP_EXECUTABLE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Speicherseiten können ausgeführt werden (auf x86 nicht verfügbar).
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout List
\labelwidthstring 00.00.0000
dest_offset Offset im Zielbereich
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Verschiebt einen Adressraum des aktuellen Threads in einen Adressraum eines
 bestimmten Ziel-Threads.
 Das Verschieben ist eine Kombinierte 
\emph on
map
\emph default
 Operation auf den Zieladressraum und eine im Anschluß stattfindende 
\emph on
unmap
\emph default
 Operation auf den lokalen Adressraum.
 Das Verschieben von Teilen des Kernel-Adressraums ist nicht zulässig.
 Enthält ein Teil des Zieladressraums bereits Seitenrahmen, so werden diese
 freigegeben und der Bereich durch das Quellmapping ersetzt.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Die Operation erfordert, dass auf die Gegenseite zuvor eine 
\emph on
allow
\emph default
-Operation ausgeführt wurde, so dass die Zieladresse und die Zugriffsbeschränkun
gen bekannt sind.
 Der Quellbereich muss in den Zielbereich passen, der von der 
\emph on
allow
\emph default
-Operation freigegeben wurde.
 Der Zugriff kann verweigert werden, wenn die Zugriffsbeschränkungen der
 vorausgegangene 
\emph on
allow
\emph default
-Operation den Zugriff nicht gestattet hat.
 
\end_layout

\begin_layout Standard
Dieser Aufruf hat keine Einschränkungen bei der Anzahl von Speicherseiten,
 die auf einen Aufruf gleichzeitig verarbeitet werden können.
 Er kapselt dies durch mehrfaches Aufrufen von 
\emph on
hymk_move.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_ACCESS_DENIED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Operationsbeschränkungen wurden übertreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendete Ziel-SID ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die verwendeten Operationsflags sind ungültig oder die Zieladresse überschneidet
 sich mit dem Kernel-Adressraum.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hysys_info_read
\emph default
 - Hauptinfopage auslesen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/system.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
uint32_t hysys_info_read(unsigned int num);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
num Nummer des Eintrags in der Hauptinfopage (
\emph on
MAININFO_*
\emph default
-Konstanten in 
\emph on
hymk
\emph default
/
\emph on
sysinfo
\emph default
.
\emph on
h
\emph default
 )
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Gelesener Wert aus der Hauptinfopage.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Liest aus der Hauptinfopage den Eintrag mit Nummer 
\emph on
num
\emph default
 aus und gibt dessen Inhalt zurück.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültige Infopage-Nummer.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hysys_proctab_read
\emph default
 - Prozesstabelle auslesen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/system.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
uint32_t hysys_proctab_read(sid_t sid, unsigned int num);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
sid SID des Prozess-Subjekts.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
num Nummer des Eintrags in der Hauptinfopage (
\emph on
PRCTAB_*
\emph default
-Konstanten in 
\emph on
hymk
\emph default
/
\emph on
sysinfo
\emph default
.
\emph on
h
\emph default
 )
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Gelesener Wert aus der Prozesstabelle.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Liest aus dem Prozesstabelleneintrag für den Prozess 
\emph on
sid
\emph default
 das Element 
\emph on
num
\emph default
 aus.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültige Infopage-Nummer.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültige Prozess-SID.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
hysys_thrtab_read
\emph default
 - Threadtabelle auslesen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/system.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
uint32_t hysys_thrtab_read(sid_t sid, unsigned int num);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
sid SID des Thread-Subjekts.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
num Nummer des Eintrags in der Hauptinfopage (
\emph on
PRCTAB_*
\emph default
-Konstanten in 
\emph on
hymk
\emph default
/
\emph on
sysinfo
\emph default
.
\emph on
h
\emph default
 )
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Gelesener Wert aus der Threadtabelle.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Liest aus dem Threadtabelleneintrag für den Thread 
\emph on
sid
\emph default
 das Element 
\emph on
num
\emph default
 aus.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültige Infopage-Nummer.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_SID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültige Thread-SID.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Section
Speicherzugriff
\end_layout

\begin_layout Subsection

\emph on
buf_copy
\emph default
 - Kopieren von Speicherbereichen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/stdfun.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
size_t buf_copy(void* dest, const void* src, size_t num);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
dest Zeiger auf den Zielbereich.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
src Zeiger auf den Quellbereich.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
num Anzahl der zu kopierenden Bytes.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Anzahl der kopierten Bytes.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Kopiert einen Speicherbereich 
\emph on
src 
\emph default
von 
\emph on
num
\emph default
 Bytes nach 
\emph on
dest
\emph default
.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der Ziel- oder Quellzeiger ist ungültig (z.B.
 NULL).
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
buf_fill
\emph default
 - Speicherbereich füllen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/stdfun.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
size_t buf_fill(void* dest, size_t long num, uint8_t val);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
dest Zeiger auf den Zielbereich.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
num Anzahl der zu füllenden Bytes
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
val Zu schreibender Wert
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Anzahl der geschriebenen Bytes.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Füllt einen Wert 
\emph on
val
\emph default
 in den Zielspeicherbereich 
\emph on
dest
\emph default
, bis 
\emph on
num
\emph default
 Bytes geschrieben worden sind.
 
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der Zielzeiger ist ungültig (z.B.
 NULL).
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
buf_compare
\emph default
 - Speicherbereich vergleichen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/stdfun.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
int buf_compare(const void* dest, const void* src, size_t num);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
dest Zeiger auf den Zielbereich.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
src Zeiger auf den Quellbereich
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
num Größe des Quellbereichs
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Gibt an, ob der Zielbereich größer (> 0), kleiner (< 0) oder gleich (==
 0) gegenüber dem Quellbereich ist.
 
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Vergleicht zwei Speicherbereiche 
\emph on
dest 
\emph default
und 
\emph on
src
\emph default
 binär miteinander.
 Hierbei wird entweder solange vergleichen, bis ein unterschiedlicher Wert
 entdeckt wurde (die Differenz der beiden Werte wird zurückgegeben) oder
 die Grenze 
\emph on
num
\emph default
 erreicht wurde.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der Ziel- oder Quellzeiger ist ungültig (z.B.
 NULL).
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
buf_find_uintN
\emph default
 - Speicherbereich suchen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/stdfun.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void* buf_find_uint8(const void* dest, size_t num, uint8_t val);
\end_layout

\begin_layout LyX-Code

\size scriptsize
void* buf_find_uint16(const void* dest, size_t num, uint16_t val);
\end_layout

\begin_layout LyX-Code

\size scriptsize
void* buf_find_uint32(const void* dest, size_t num, uint32_t val);
\end_layout

\begin_layout LyX-Code

\size scriptsize
void* buf_find_uint64(const void* dest, size_t num, uint64_t val);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
dest Zeiger auf den Zielbereich.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
num Größe des Bereichs in Byte
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
val Zu suchendes Wort
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Zeiger auf das erste Vorkommen.
\end_layout

\begin_layout Standard
NULL bei Fehlschlag.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Sucht ein Datenwort 
\emph on
val
\emph default
 in einem Zielbereich 
\emph on
dest
\emph default
, der die Größe 
\emph on
num
\emph default
 hat.
 Dabei muss 
\emph on
num
\emph default
 ein Vielfaches von 
\emph on
sizeof
\emph default
(val) sein.
 Das Datenwort 
\emph on
val
\emph default
 ist dabei je nach Funktion vom Typ 
\emph on
uint8_t
\emph default
, 
\emph on
uint16_t
\emph default
, 
\emph on
uint32_t
\emph default
 oder 
\emph on
uint64_t
\emph default
.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der Zielzeiger ist ungültig (z.B.
 NULL).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Das Argument 
\emph on
num
\emph default
 ist kein Vielfaches von 
\emph on
sizeof
\emph default
(
\emph on
val
\emph default
).
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
buf_find_buf
\emph default
 - Speicherbereich suchen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/stdfun.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void* buf_find_buf(const void* dest, size_t dnum, const void *src, size_t
 snum);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
dest Zeiger auf den Zielbereich.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
dnum Größe des Zielbereichs in Byte
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
src Zu suchende Bytefolge
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
snum Größe der Bytefolge
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Zeiger auf das erste Vorkommen.
\end_layout

\begin_layout Standard
NULL bei Fehlschlag.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Sucht eine Bytefolge 
\emph on
src
\emph default
 mit der Größe 
\emph on
snum 
\emph default
in einem Zielbereich 
\emph on
dest
\emph default
, der die Größe 
\emph on
dnum
\emph default
 hat.
 
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der Ziel- oder Quellzeiger ist ungültig (z.B.
 NULL).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
snum 
\emph default
ist 0 oder größer als 
\emph on
dnum
\emph default
.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
str_copy
\emph default
 - Nullterminierte Zeichenfolge kopieren
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/stdfun.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
size_t str_copy(utf8_t* dest, const utf8_t* src, size_t max);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
dest Zeiger auf den Zielbereich.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
src Zeiger auf den Quellbereich
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
max Maximale Länge der Quellfolge
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
\begin_inset Formula $\geq$
\end_inset

0 Anzahl der tatsächlich kopierten Zeichen.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
-1 Es wurde bis 
\emph on
max
\emph default
 kein Terminierungszeichen gefunden
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Kopiert eine nullterminierte Zeichenfolge aus dem Puffer 
\emph on
src
\emph default
 in den Puffer 
\emph on
dest
\emph default
.
 Diese Zeichenfolge hat höchstens die Länge 
\emph on
max
\emph default
.
 Nach 
\emph on
max
\emph default
 Zeichen, oder wenn das Terminierungszeichen 0 gefunden wurde, wird das
 Kopieren abgebrochen.
 Das Terminierungszeichen wird ebenfalls kopiert.
 Enthält der String innerhalb von 
\emph on
max
\emph default
 kein Terminierungszeichen, so wird der Zielpuffer ebenfalls nicth mit 0
 terminiert.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der Ziel- oder Quellzeiger ist ungültig (z.B.
 NULL).
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
str_compare
\emph default
 - Nullterminierte Zeichenfolge vergleichen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/stdfun.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
int str_compare(const utf8_t* dest, const utf8_t* src, size_t max);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
dest Zeiger auf den Zielbereich.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
src Zeiger auf den Quellbereich
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
max Maximale Länge der Quellfolge
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Der Zielbereich ist größer (>0), kleiner (<0) oder gleich (==0) dem Quellbereich.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Kopiert eine nullterminierte Zeichenfolge aus dem Puffer 
\emph on
src
\emph default
 in den Puffer 
\emph on
dest
\emph default
.
 Diese Zeichenfolge hat höchstens die Länge 
\emph on
max
\emph default
.
 Nach 
\emph on
max
\emph default
 Zeichen, oder wenn das Terminierungszeichen 0 gefunden wurde, wird das
 Kopieren abgebrochen.
 Das Terminierungszeichen wird ebenfalls kopiert.
 
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der Ziel- oder Quellzeiger ist ungültig (z.B.
 NULL).
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
str_len
\emph default
 - Länge einer nullterminierten Zeichenfolge ermitteln
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/stdfun.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
size_t str_len(const utf8_t* dest, size_t max);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
dest Zeiger auf den Zielbereich
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
max Maximale Länge der Zielfolge
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
\begin_inset Formula $\geq$
\end_inset

0 Länge der nullterminierten Zeichenfolge in Byte (ohne Terminierungszeichen).
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
-1 Zeichenfolge ist innerhalb von 
\emph on
max
\emph default
 nicht nullterminiert.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Gibt die Anzahl von Bytes in einer nullterminierten Zeichenfolge 
\emph on
src 
\emph default
ohne das Terminierungszeichen zurück.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der Zielzeiger ist ungültig (z.B.
 NULL).
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
str_char
\emph default
 - Byte suchen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/stdfun.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
utf8_t* str_char(const utf8_t* dest, char sgn, size_t max);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
dest Zeiger auf den Zielbereich
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
sgn Gesuchtes Byte
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
max Maximallänge des Bereichs
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Zeiger auf das erste Vorkommen des gesuchten Bytes.
\end_layout

\begin_layout Standard
NULL, wenn das gesuchte Byte nicht vorgekommen ist.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Gibt einen Zeiger auf das erste Vorkommen des ASCII-Zeichens 
\emph on
sgn
\emph default
 in der Zeichenkette 
\emph on
dest
\emph default
, die eine Maximallänge von 
\emph on
max
\emph default
 Byte hat, zurück.
 Diese Funktion ist nicht zur Suche von UTF-8-Zeichen geeignet!
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der Zielzeiger ist ungültig (z.B.
 NULL).
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
str_find
\emph default
 - Zeichenfolge suchen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/stdfun.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
utf8_t* str_find(const utf8_t* dest, size_t dmax, const utf8_t* src, size_t
 smax);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
dest Zeiger auf den Zielbereich
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
dmax Maximalgröße des Zielbereichs
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
src Zeiger auf den Quellbereich
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
smax Maximalgröße des Quellbereichs
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Zeiger auf das erste Vorkommen der gesuchten Zeichenfolge.
\end_layout

\begin_layout Standard
NULL, wenn das gesuchte Zeichen nicht vorgekommen ist.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Gibt einen Zeiger auf das erste Vorkommen der nullterminierten Zeichenfolge
 
\emph on
src 
\emph default
in der nullterminierten Zeichenkette 
\emph on
dest
\emph default
 zurück (wobei das Terminierungszeichen von 
\emph on
src
\emph default
 natürlich ignoriert wird).
 Die Zeichenfolgen haben jeweils eine Maximallänge von 
\emph on
smax
\emph default
 (für 
\emph on
src
\emph default
) und 
\emph on
dmax
\emph default
 (für 
\emph on
dest
\emph default
).
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der Ziel- oder Quellzeiger ist ungültig (z.B.
 NULL).
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Section
Verwaltung von Speicherregionen
\end_layout

\begin_layout Subsection

\emph on
reg_create
\emph default
 - Region erzeugen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/mem.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
region_t* reg_create(region_t region);
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\size footnotesize
typedef struct {
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size footnotesize
char        name[32];         /* Name der Region */
\end_layout

\begin_layout LyX-Code

\size footnotesize
unsigned    id;               /* ID der Region */
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\size footnotesize
void*       start;            /* Startadresse */
\end_layout

\begin_layout LyX-Code

\size footnotesize
unsigned    pages;            /* Größe der Region in Seiten */
\end_layout

\begin_layout LyX-Code

\size footnotesize
int         flags;            /* Flags (siehe REGFLAGS_*) */
\end_layout

\begin_layout LyX-Code

\size footnotesize
unsigned    usable_pages;     /* Anzahl der brauchbaren Seiten */
\end_layout

\begin_layout LyX-Code

\size footnotesize
unsigned    readable_pages;   /* Anzahl der lesbaren Seiten */
\end_layout

\begin_layout LyX-Code

\size footnotesize
unsigned    writeable_pages;  /* Anzahl der beschreibbaren Seiten */
\end_layout

\begin_layout LyX-Code

\size footnotesize
unsigned    executable_pages; /* Anzahl der ausführbaren Seiten */
\end_layout

\begin_layout LyX-Code

\size footnotesize
unsigned    shared_pages;     /* Anzahl der gemeinsam genutzen Seiten */
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\size footnotesize
void* (*alloc)(size_t sz);    /* Allokator-Funktion (siehe mem_alloc) */
\end_layout

\begin_layout LyX-Code

\size footnotesize
void (*free)(void* ptr);      /* Freigabe-Funktion (siehe mem_free) */
\end_layout

\begin_layout LyX-Code

\size scriptsize
 
\end_layout

\begin_layout LyX-Code

\size footnotesize
unsigned    chksum;           /* Prüfsumme über den Deskriptor */
\end_layout

\begin_layout LyX-Code

\size footnotesize
list_t      ls;               /* Elemente der verketteten Liste */
\end_layout

\end_deeper
\begin_layout LyX-Code

\size footnotesize
}region_t;
\end_layout

\begin_layout LyX-Code

\size scriptsize
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
#define REGFLAGS_READABLE          1
\end_layout

\begin_layout LyX-Code

\size scriptsize
#define REGFLAGS_WRITEABLE         2
\end_layout

\begin_layout LyX-Code

\size scriptsize
#define REGFLAGS_EXECUTABLE        4
\end_layout

\begin_layout LyX-Code

\size scriptsize
#define REGFLAGS_SHARED            8
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
region Regionsdeskriptor
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Zeiger auf den Regionsdeskriptor.
\end_layout

\begin_layout Standard
NULL bei Fehler.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Erstellt eine Region anhand des übergebenen Regionsdeskriptors.
 Dabei wird an der angegebenen Adresse eine neue Speicherseite in den Adressraum
 eingeblendet, an welcher der Header der Region plaziert wird.
 Die Region wird in die verkettete Liste der Regionen eingehängt.
 Der Aufruf initialisiert automatisch die Deskriptorprüfsumme, welche über
 Startadresse und Seitenzahl der Region berechnet wird.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Region liegt an einer ungültigen Adresse.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Regionsflags sind ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_RESSOURCE_BUSY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Region liegt in einer bereits bestehenden Region oder überlappt mit
 dieser.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
reg_destroy
\emph default
 - Region vernichten
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/mem.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void reg_destroy(region_t *region);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
region Zeiger auf den Regionsdeskriptor.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Vernichtet eine bestehende Region.
 Dabei werden grundsätzlich alle Speicherseiten innerhalb der Region aus
 dem Adressraum automatisch entfernt.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der Regionsdeskriptor ist ungültig.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Section
Speicherverwaltung (Hintergrundfunktionen)
\end_layout

\begin_layout Subsection

\emph on
mem_heap_inc
\emph default
 - Heap vergrößern
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/mem.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void mem_heap_inc(unsigned pages);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
pages Anzahl der Seiten, die dem Heap hinzugefügt werden sollen.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Fügt dem Heap 
\emph on
pages
\emph default
 neue physische Speicherseiten am oberen Ende hinzu.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Anmerkung:
\end_layout

\begin_deeper
\begin_layout Standard
Dieser Aufruf kann nicht zu einer sicheren Allokation von Heap-Speicher
 herangezogen werden, da er nicht die Heap-Verwaltung entsprechend auf den
 Speichergewinn einstellt.
 Viel mehr kann er aber dazu führen, dass die Heap-Verwaltung durcheinander
 gerät.
 Er sollte daher nur dann verwendet werden, wenn dem Aufrufer wirklich klar
 ist, was er dabei macht.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ENOUGH_MEMORY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Nicht genügend physischer Arbeitsspeicher verfügbar oder Heapgrenze erreicht.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Anzahl der Seiten ist ungültig.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
mem_heap_dec
\emph default
 - Heap
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/mem.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void mem_heap_dec(unsigned pages);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
pages Anzahl der Seiten, die aus dem Heap entfernt werden sollen.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Gibt 
\emph on
pages
\emph default
 Seiten vom oberen Ende des Heaps wieder frei.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Anmerkung:
\end_layout

\begin_deeper
\begin_layout Standard
Dieser Aufruf kann nicht zu einer sicheren Freigabe von Heap-Speicher herangezog
en werden, da er nicht die Heap-Verwaltung entsprechend auf den Speicherverlust
 einstellt.
 Viel mehr kann er aber dazu führen, dass die Heap-Verwaltung durcheinander
 gerät.
 Er sollte daher nur dann verwendet werden, wenn dem Aufrufer wirklich klar
 ist, was er dabei macht.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Anzahl von Speicherseiten ist ungültig.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
mem_stack_alloc
\emph default
 - Stack erzeugen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/mem.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void* mem_stack_alloc(size_t sz);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
sz Größe des zu reservierenden Stackbereichs
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Zeiger auf den Anfang neu erstellten Stack (nicht der Stackzeiger!).
\end_layout

\begin_layout Standard
NULL bei Fehlschlag.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Alloziiert einen Stack in der Stackregion und füllt ihn mit Speicherseiten
 auf.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ENOUGH_MEMORY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Stackregion enthält keinen Speicherplatz mehr oder es stehen nicht genügen
 physische Seitenrahmen zur Verfügung.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
mem_stack_free
\emph default
 - Region vernichten
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/mem.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void mem_stack_free(void* stack);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
stack Zeiger auf die Stackregion (nicht der Stack-Zeiger!)
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Gibt eine Stackregion wieder frei.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Stackregion ist ungültig.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Section
Allgemeine Speicherverwaltung (Heap)
\end_layout

\begin_layout Subsection

\emph on
mem_alloc
\emph default
 - Speicher auf dem Heap reservieren
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/mem.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void* mem_alloc(size_t sz);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
sz Anzahl der Byte.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Zeiger auf den reservierten Bereich.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Reserviert 
\emph on
sz
\emph default
 Bytes auf dem Heap und gibt einen Zeiger darauf zurück.
\end_layout

\begin_layout Standard
NULL bei Fehlschlag.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ENOUGH_MEMORY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Es steht nicht genügend physischer Speicher oder Platz auf dem Heap zur
 Verfügung.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Größenangabe ist ungültig.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_MEMORY_CORRUPTED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Speicherverwaltung wurde beschädigt.
 Dies weist normalerweise auf einen Programmier- oder Hardwarefehler hin.
 Es wird empfohlen das Programm sofort zu beenden.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
mem_realloc
\emph default
 - Größe eines Speicherbereichs ändern
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/mem.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void* mem_realloc(void* mem, size_t nsz);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
mem Zeiger auf den bestehenden Speicherbereich.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
nsz Größe des neuen Speicherbereichs.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Zeiger auf den neuen Speicherbereich.
\end_layout

\begin_layout Standard
NULL bei Fehlschlag.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Ändert die Größe eines Speicherbereichs 
\emph on
mem
\emph default
 auf 
\emph on
nsz
\emph default
.
 Dabei kann der Bereich vergrößert oder verkleinert werden.
 Unter Umständen muss der Speicherbereich mit Inhalt verschoben werden,
 daher ist die Speicheradresse aus dem Rückgabewert als neue Adresse des
 Speicherbereichs zu verwenden.
 Bei einer Verkleinerung des Speicherbereichs find ein Datenverlust statt.
\end_layout

\begin_layout Standard
Wird 
\emph on
NULL
\emph default
 als Speicherbereich übergeben, arbeitet die Funktion wie 
\emph on
mem_alloc
\emph default
.
 Ist die Größe 
\emph on
0
\emph default
, so wird der Speicherbereich freigegeben.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültige Speicheradresse.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültige Größenangabe.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ENOUGH_MEMORY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Es steht nicht genug Speicherplatz auf dem Heap oder es stehen nicht genügend
 physische Seitenrahmen zur Verfügung.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
mem_free
\emph default
 - Größe eines Speicherbereichs ändern
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/mem.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void mem_free(void* mem);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
mem Zeiger auf den Anfang des freizugebenden Speicherbereich.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Gibt den Speicherbereich 
\emph on
mem 
\emph default
wieder frei.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültige Speicheradresse.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Section
Einfache Threadfunktionen (BaseLib-Threads)
\end_layout

\begin_layout Subsection

\emph on
blthr_create
\emph default
 - Thread erstellen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/blthr.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
thread_t* blthr_create(void (*start)(thread_t *thr), size_t stack);
\end_layout

\begin_layout LyX-Code

\size scriptsize
 
\end_layout

\begin_layout LyX-Code

\size footnotesize
typedef struct {
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size footnotesize
void (*func)(thread_t *thr);
\end_layout

\begin_layout LyX-Code

\size footnotesize
list_t ls;
\end_layout

\end_deeper
\begin_layout LyX-Code

\size footnotesize
}atexit_t;
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\size footnotesize
typedef struct {
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size footnotesize
sid_t      thread_sid;   /* SID des Threads */
\end_layout

\begin_layout LyX-Code

\size footnotesize
void*      stack;        /* Stack des Threads */
\end_layout

\begin_layout LyX-Code

\size footnotesize
size_t     stack_sz;     /* Größe des Thread-Stacks in Byte */
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\size footnotesize
/* Startroutine des Threads */
\end_layout

\begin_layout LyX-Code

\size footnotesize
void (*start)(thread_t *thr);
\end_layout

\begin_layout LyX-Code

\size scriptsize
 
\end_layout

\begin_layout LyX-Code

\size footnotesize
atexit_t *atexit_list;     /* Liste der At-Exit-Aufrufe */
\end_layout

\begin_layout LyX-Code

\size footnotesize
int  atexit_cnt;           /* Anzahl der At-Exit-Aufrufe */
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\size footnotesize
mtx_t mutex;               /* Mutex des Deskriptors */
\end_layout

\end_deeper
\begin_layout LyX-Code

\size footnotesize
}thread_t;
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
start Zeiger auf die Initialisierugnsfunktion des Threads
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
stack Größe des Stacks des zu erstellenden Threads (0 = Standardgröße)
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Zeiger auf den Threaddeskriptor.
\end_layout

\begin_layout Standard
NULL bei Fehlschlag.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Erzeugt einen neuen Thread, dessen Ausführung in der Routine 
\emph on
start
\emph default
 beginnt.
 Die Routine 
\emph on
start
\emph default
 erhält als Parameter einen Threaddeskriptor, der mit den Handler-Routinen
 der BaseLib-Threads initialisiert worden ist.
 Wichtig ist, dass alle unbenutzen Behandlungsroutinen mit 
\emph on
NULL
\emph default
 initialisiert werden.
 Der neue Thread erhält einen Stack der Größe 
\emph on
stack
\emph default
 Bytes.
\end_layout

\begin_layout Standard
Um den neuen Thread zu aktivieren, ist ein Aufruf von 
\emph on
blthr_awake
\emph default
 erforderlich.
\end_layout

\begin_layout Standard
Diese Funktion führt automatisch 
\emph on
blthr_cleanup
\emph default
 aus, um überreste von Threads, die mit 
\emph on
blthr_finish
\emph default
 beendet wurden, aufzulösen.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültige Speicheradresse.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ENOUGH_MEMORY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Es steht nicht genug Speicherplatz zur Erstellung des neuen Threads zur
 Verfügung.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
blthr_cleanup
\emph default
 - Threads aufräumen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/blthr.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void blthr_cleanup(void);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Gibt den Stack und die Threaddeskriptoren von zuvor beendeten Threads wieder
 frei.
 Auf den Threaddeskriptor des beendeten Threads verweist der Zeiger 
\emph on
thr
\emph default
.
 Hierbei werden keinerlei 
\emph on
atexit
\emph default
-Funktionen ausgeführt.
 Diese Funktion sollte aufgerufen werden, wenn ein Thread sich mit 
\emph on
blthr_finish
\emph default
 beendet hat.
 Sie wird automatisch von 
\emph on
blthr_create
\emph default
 und 
\emph on
blthr_kill 
\emph default
ausgeführt.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültiger Threaddeskriptor.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
blthr_atexit
\emph default
 - Terminierungsfunktion für Thread hinzufügen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/blthr.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void blthr_
\size footnotesize
atexit(thread_t *thr, void (*func)(thread_t *thr));
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
thr Zeiger auf den Deskriptor des betroffenen Threads
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
func Terminierugnsfunktion
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Fügt die Terminierungsfunktion 
\emph on
func
\emph default
 der Liste der Terminierungsfunktionen des Threads 
\emph on
thr
\emph default
 hinzu.
 Diese Funktion 
\emph on
func
\emph default
 wird beim Aufruf von 
\emph on
blthr_finish
\emph default
 vor Terminierung des Threads aufgerufen.
 Sie wird ebenfalls durch 
\emph on
blthr_kill 
\emph default
aufgerufen.
 Als Parameter erhält die Funktion den Parameter 
\emph on
thr
\emph default
, welcher den Zeiger auf den zu beendenden Thread enthält.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültiger Threaddeskriptor oder Funktionszeiger.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
blthr_kill
\emph default
 - Thread beenden
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/blthr.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void blthr_kill(thread_t *thr);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
thr Zeiger auf den Deskriptor des zu beendenden Threads.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Beendet einen Thread 
\emph on
thr 
\emph default
und gibt dessen Datenstrukturen wieder frei.
 Zuvor werden die mit 
\emph on
blthr_atexit 
\emph default
festgelegten Funktionen im aktuellen Threadkontext ausgeführt.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültiger Threaddeskriptor.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_ACCESS_DENIED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Die Kill-Funktion kann nicht auf den aktuellen Thread angewendet werden.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
blthr_finish
\emph default
 - Aktuellen Thread terminieren
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/blthr.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void blthr_finish(void);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Terminiert den aktuellen Thread, indem der Thread entgültig angehalten wird.
 Ein anderer Thread des Prozesses muss jedoch dessen Datenstrukturen durch
 den Aufruf von 
\emph on
blthr_cleanup
\emph default
 nachträglich freigeben.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültiger Threaddeskriptor.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
blthr_init
\emph default
 - Initialisierungsroutine des Threads
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/blthr.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void blthr_init(thread_t *thr);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
thr Zeiger auf die eigene Thread-Datenstruktur
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Diese Routine wird eigentlich durch das Threadpaket nach dem architekturspezifis
chen Start-up-Code des neuen Threads aufgerufen.
 Sie initialisiert den neuen Thread 
\emph on
thr 
\emph default
vollständig und ruft die bei 
\emph on
blthr_create
\emph default
 definierte Startroutine auf.
 Sie ist üblicherweise eine interne Routine des Threadpakets, kann aber
 für die Entwicklung eines eigenen Threadpakets nützlich sein.
 
\end_layout

\begin_layout Standard
Sie ist jedoch nicht zwingend automatisch die Routine, die der Kernel als
 Start-up-Code für den Thread verwendet.
 Hierfür kann durch die Bibliothek intern eine architekturspezifische Routine
 mit Namen 
\emph on
blthr_init_arch
\emph default
 verwendet werden.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_ACCESS_DENIED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Thread bereits initialisiert.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
blthr_yield
\emph default
 - CPU-Zeit abgeben
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/blthr.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void blthr_yield(sid_t sid);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
sid SID eines Threads, der die restliche CPU-Zeit erhalten soll.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Der Aufruf dieser Routine führt dazu, dass der aktuelle Thread augenblicklich
 seine aktuelle CPU-Zeit verliert.
 Benennt er im Parameter 
\emph on
sid
\emph default
 einen weiteren Thread, so erhält dieser seine verbleibende CPU-Zeit.
 (
\emph on
Näheres siehe hymk_yield_thread
\emph default
)
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültige SID.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
blthr_awake
\emph default
 - Thread aufwecken
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/blthr.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void blthr_awake(thread_t *thr);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
thr Zeiger auf den Deskriptor des Threads, der aufgeweckt werden soll.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Diese Routine weckt einen Thread auf, auf den der Deskriptor 
\emph on
thr
\emph default
 zeigt, sofern er zuvor mit 
\emph on
blthr_freeze
\emph default
 eingefroren wurde.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültiger Threaddeskriptor.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
blthr_freeze
\emph default
 - Thread anhalten
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/blthr.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void blthr_freeze(thread_t *thr);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
thr Zeiger auf den Deskriptor des Threads, der angehalten werden soll.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Diese Routine hält den durch den Deskriptor 
\emph on
thr
\emph default
 bezeichneten Thread an.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültiger Threaddeskriptor.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Section
Synchronisation mit Mutexen
\end_layout

\begin_layout Subsection

\emph on
MTX_DEFINE
\emph default
 - Globalen Mutex definieren
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/mutex.h>
\end_layout

\begin_layout LyX-Code
#define MTX_DEFINE
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Initialisierer für Mutexe, die auf globaler Ebene defniert werden.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Dieser Aufruf liefert einen Initialisierungswert für einen neuen Mutex zurück.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
MTX_NEW
\emph default
 - Neuen Mutex initialisieren
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/mutex.h>
\end_layout

\begin_layout LyX-Code
#define MTX_NEW()
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Initialisierer für einen neuen Mutex, der auf lokaler Ebene definiert oder
 initialisiert werden soll.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Dieses Makro liefert einen Initialisierer für einen neuen Mutex zurück.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
mtx_trylock
\emph default
 - Mutex schließen, wenn möglich
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/mutex.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
int mtx_trylock(mtx_t *mutex);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
mutex Mutex, der geschlossen werden soll.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
1 falls der Mutex geschlossen wurde
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
0 falls der Mutex nicht geschlossen werden konnte
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Dieser Aufruf versucht den Mutex 
\emph on
mutex
\emph default
 zu schließen, ohne jedoch in eine Warteschleife einzutreten.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültiger Mutex.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
mtx_lock
\emph default
 - Mutex schließen oder warten
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/mutex.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
int mtx_lock(mtx_t *mutex, long timeout);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
mutex Mutex, der geschlossen werden soll.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
timeout Anzahl der Versuche den Mutex zu schließen
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="3">
<features>
<column alignment="block" valignment="top" width="5cm">
<column alignment="block" valignment="top" width="1.5cm">
<column alignment="block" valignment="top" width="4cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
MTX_NO_TIMEOUT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Nicht auf Freigabe des Mutexes warten
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
MTX_UNLIMITED
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Unendlich auf Mutex-Freigabe warten.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout List
\labelwidthstring 00.00.0000
Anmerkung: Die Werte 0 und -1 dürfen auch direkt verwendet werden.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
1 falls der Mutex geschlossen wurde
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
0 falls der Mutex nicht innerhalb des Timeouts geschlossen werden konnte
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Dieser Aufruf versucht den Mutex 
\emph on
mutex
\emph default
 zu schließen.
 Ist es nicht auf Anhieb möglich, so gibt der Thread mittels 
\emph on
blthr_yield
\emph default
 seine CPU-Zeit ab und nimmt anschließend 
\emph on
timeout
\emph default
 erneute Versuche , den Mutex zu schließen.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültiger Mutex.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_TIMED_OUT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Timeout des Mutex wurde erreicht.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
mtx_unlock
\emph default
 - Mutex freigeben
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/mutex.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void mtx_unlock(mtx_t *mutex);
\end_layout

\end_deeper
\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
mutex Mutex, der freigegeben werden soll.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Dieser Aufruf gibt den Mutex 
\emph on
mutex
\emph default
 wieder frei.
 Der Aufruf sollte nur auf einen Mutex angewendet werden, der zuvor durch
 den selben Thread geschlossen wurde!
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültiger Mutex.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Section
Datentypen der hyBaseLib
\end_layout

\begin_layout Standard
Die hyBaseLib baut auf folgenden Datentypen auf (deklariert in 
\begin_inset Quotes gld
\end_inset


\emph on
hydrixos/types.h
\emph default

\begin_inset Quotes grd
\end_inset

):
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
int8_t 8-bit Ganzzahl mit Vorzeichen (
\begin_inset Quotes gld
\end_inset

signed integer
\begin_inset Quotes grd
\end_inset

)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
int16_t 16-bit Ganzzahl mit Vorzeichen (
\begin_inset Quotes gld
\end_inset

signed integer
\begin_inset Quotes grd
\end_inset

)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
int32_t 32-bit Ganzzahl mit Vorzeichen (
\begin_inset Quotes gld
\end_inset

signed integer
\begin_inset Quotes grd
\end_inset

)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
uint8_t 8-bit Ganzzahl ohne Vorzeichen (
\begin_inset Quotes gld
\end_inset

unsigned integer
\begin_inset Quotes grd
\end_inset

)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
uint16_t 16-bit Ganzzahl ohne Vorzeichen (
\begin_inset Quotes gld
\end_inset

unsigned integer
\begin_inset Quotes grd
\end_inset

)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
uint32_t 32-bit Ganzzahl ohne Vorzeichen (
\begin_inset Quotes gld
\end_inset

unsigned integer
\begin_inset Quotes grd
\end_inset

)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
intptr_t Vorzeichenbehafte Ganzzahl, die durch (void*) in einen Zeiger konvertie
rt werden darf
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
uintptr_t Vorzeichenlose Ganzzahl, die durch (void*) in einen Zeiger konvertiert
 werden darf
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
size_t Anzahl der Bytes eines Objekt als vorzeichenlose Ganzzahl
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
bool_t Ganzzahl, deren Aussage mit dem Wert TRUE wahr und dem Wert FALSE
 (=0) falsch ist.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
bool Identisch zu bool_t
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
sid_t SID eines Subjekts (32-bit Länge, Verwendung als vorzeichenlose Ganzzahl
 zulässig)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
irq_t Nummer eines Interrupts (32-bit Länge, Verwendung als vorzeichenlose
 Ganzzahl zulässig)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
errno_t Fehlernummer (32-bit Länge, Verwendung als vorzeichenlose Ganzzahl
 zulässig)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
mtx_t Mutex-Datentyp
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
thread_t Thread-Deskriptor
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
atexit_t Liste von At-Exit-Aufrufen
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
region_t Region-Deskriptor
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
block_t Block auf dem Heap (interne Datenstruktur)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
tls_t TLS-Variable (identisch mit uint32_t)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
utf8_t Byte aus einem UTF-8-String (identisch mit 
\emph on
int8_t
\emph default
)
\end_layout

\begin_layout Standard
Auf Systemen mit hardware- oder compilerseitigen 64-bit Unterstützung stehen
 die Datentypen 
\emph on
uint64_t
\emph default
 und 
\emph on
int64_t
\emph default
 zusätzlich zur Verfügung.
 
\end_layout

\begin_layout Section
Globale Variablen der hyBaseLib
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
errno_t*\InsetSpace ~
tls_errno; Zegier auf die Errno-Variable auf dem TLS.
 (hydrixos/error.h)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
region_t\InsetSpace ~
*regions; Verkettete Liste der Speicherregionen (hydrixos/mem.h).
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
region_t\InsetSpace ~
*code_region; Deskriptor der Code-Region
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
region_t\InsetSpace ~
*data_region; Deskriptor der Daten-Region
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
region_t\InsetSpace ~
*stack_region; Deskriptor der Stack-Region
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
region_t\InsetSpace ~
*heap_region; Deskriptor der Heap-Region
\end_layout

\end_deeper
\begin_layout List
\labelwidthstring 00.00.0000
mtx_t\InsetSpace ~
reg_mutex; Mutex, der die Regionstabelle schützt (hydrixos/mem.h).
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
thread_t\InsetSpace ~
**tls_my_thread; Zeiger auf Datenstruktur des aktuellen Threads
 (hydrixos/blthr.h)
\end_layout

\begin_layout Standard

\newpage

\end_layout

\begin_layout Section
Verwaltung der Mapping-Region
\end_layout

\begin_layout Subsection

\emph on
pmap_alloc
\emph default
 - Speicher für Page-Mapping alloziieren
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/pmap.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void* pmap_alloc(size_t sz);
\end_layout

\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
sz Größe des zu alloziierenden Speicherbereichs in Bytes.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Zeiger auf den neu alloziierten Speicherbereich.
 
\emph on
NULL 
\emph default
bei Fehlschlag.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Dieser Aufruf alloziiert einen Speicherbereich bestehend aus 
\emph on
sz 
\emph default
Bytes
\emph on
 
\emph default
in der Mapping-Region.
 Dabei wird der alloziierte Speicherbereich jedoch nicht mit physischen
 Seitenrahmen unterlegt.
 Dieser Speicherbereich kann für Page-Mappings verwendet werden.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültiger Größenangabe.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ENOUGH_MEMORY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Zu wenig Heap für die Mapping-Verwaltung oder zu wenig virtueller Speicher
 in der Mapping-Region.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
pmap_free
\emph default
 - Speicher von Page-Mapping freigeben
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/pmap.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void pmap_free(void* ptr);
\end_layout

\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
ptr Zeiger auf den freizugebenden Speicherbereich.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Dieser Aufruf gibt einen Speicherbereich auf den der Zeiger 
\emph on
ptr
\emph default
 in der Mapping-Region wieder frei.
 Die Speicherseiten werden aus dem Adressbereich dabei entfernt.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültiger Zeiger.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
pmap_mapalloc
\emph default
 - Mapping-Speicher alloziieren und mit Speicherseiten unterlegen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/pmap.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void* pmap_mapalloc(size_t sz);
\end_layout

\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
sz Größe des zu alloziierenden Speicherbereichs in Byte.
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Zeiger auf den neu alloziierten Speicherbereich.
 
\emph on
NULL 
\emph default
bei Fehlschlag.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Dieser Aufruf alloziiert einen Speicherbereich bestehend aus 
\emph on
sz
\emph default
 Bytes in der Mapping-Region.
 Dabei wird der alloziierte Speicherbereich auch mit physischen Seitenrahmen
 unterlegt.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültiger Größenangabe.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_NOT_ENOUGH_MEMORY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Zu wenig Heap für die Mapping-Verwaltung, zu wenig virtueller Speicher in
 der Mapping-Region oder kein physischer Speicher mehr zur Verfügung.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Section
Der XML-Parser
\end_layout

\begin_layout Subsection

\emph on
spxml_replace_stdentities
\emph default
 - XML-Standardentities durch UTF-8-Zeichen ersetzen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/spxml.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
utf8_t* spxml_replace_stdentites(const utf8_t *text, size_t len);
\end_layout

\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
text Zu durchsuchender Text
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
len Länge des Text in Byte
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Zeiger auf die veränderte Kopie (NULL bei Fehlschlag)
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Dieser Aufruf ersetzt alle XML-Standardentities in einem Text 
\emph on
text
\emph default
 der Länge 
\emph on
len 
\emph default
durch ihre UTF-8-Entsprechungen und speichert diese in einem getrennten
 Speicherbereich.
 Ersetzt werden &lt; durch <, &gt; durch >; &amp; durch &, &quot; durch
 
\begin_inset Quotes grd
\end_inset

 und &apos; durch '.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültiger Text-Zeiger
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
spxml_create_tree
\emph default
 - XML-Daten in Baum umwandeln
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/spxml.h>
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\size scriptsize
typedef struct spxml_node_st
\end_layout

\begin_layout LyX-Code

\size scriptsize
{
\end_layout

\begin_layout LyX-Code

\size scriptsize
        int             type;           /* SPXML Elementtyp */
\end_layout

\begin_layout LyX-Code

\size scriptsize
        
\end_layout

\begin_layout LyX-Code

\size scriptsize
        const utf8_t*        tag;            /* Zeiger zum XML-Tag (ohne
 < > o.ä.) */
\end_layout

\begin_layout LyX-Code

\size scriptsize
        size_t                tag_len;        /* Länge des Tags */
\end_layout

\begin_layout LyX-Code

\size scriptsize
        
\end_layout

\begin_layout LyX-Code

\size scriptsize
        struct spxml_node_st    *children;      /* Liste der Kind-Elemente
 */
\end_layout

\begin_layout LyX-Code

\size scriptsize
        list_t                  ls;             /* Liste der Schwesternelemente
 */
\end_layout

\begin_layout LyX-Code

\size scriptsize
}spxml_node_t;
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\size scriptsize
        /* <!-- Kommentar --> */
\end_layout

\begin_layout LyX-Code

\size scriptsize
#define SPXMLEVENT_COMMENT              0
\end_layout

\begin_layout LyX-Code

\size scriptsize
        /* <? Processing Informations ?> */
\end_layout

\begin_layout LyX-Code

\size scriptsize
#define SPXMLEVENT_PROCESSING           1
\end_layout

\begin_layout LyX-Code

\size scriptsize
        /* <Leerer_Tag/> */
\end_layout

\begin_layout LyX-Code

\size scriptsize
#define SPXMLEVENT_EMPTY_TAG            2
\end_layout

\begin_layout LyX-Code

\size scriptsize
        /* </End_Tag> */
\end_layout

\begin_layout LyX-Code

\size scriptsize
#define SPXMLEVENT_END_TAG              3
\end_layout

\begin_layout LyX-Code

\size scriptsize
        /* <Begin_Tag> */
\end_layout

\begin_layout LyX-Code

\size scriptsize
#define SPXMLEVENT_BEGIN_TAG            4       
\end_layout

\begin_layout LyX-Code

\size scriptsize
        /* Daten */
\end_layout

\begin_layout LyX-Code

\size scriptsize
#define SPXMLEVENT_DATA                 5       
\end_layout

\begin_layout LyX-Code

\size scriptsize
        /* Element enthält nur Whitespaces (LF, CR, TAB, SPACE) */
\end_layout

\begin_layout LyX-Code

\size scriptsize
#define SPXMLEVENT_WHITESPACE           6
\end_layout

\begin_layout LyX-Code

\size scriptsize
        /* Ende der Datei */
\end_layout

\begin_layout LyX-Code

\size scriptsize
#define SPXMLEVENT_EOF                  7
\end_layout

\begin_layout LyX-Code

\size scriptsize
        /* Ungültiges Element */
\end_layout

\begin_layout LyX-Code

\size scriptsize
#define SPXMLEVENT_INVALID              8
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\size scriptsize
const utf8_t* spxml_create_tree(const utf8_t *xml, size_t len, spxml_node_t
 *node);
\end_layout

\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
xml Zu durchsuchender Text
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
len Länge des Text in Byte
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
node Anfangsknoten
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Zeiger auf das Ende des analysierten Textes, NULL bei Fehlschlag
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Dieser Aufruf durchsucht den Text 
\emph on
xml
\emph default
 (der Länge 
\emph on
len
\emph default
 Byte) nach einer XML-Anweisung.
 Wird eine Anweisung gefunden, so wird der Knoten 
\emph on
node
\emph default
 entsprechend der Inhalte des Elements konfiguriert.
 Findet sich ein untergeordneter Knoten, so wird dieser rekursiv mittels
 
\emph on
spxml_create_tree
\emph default
 ebenfalls durchsucht und der 
\emph on
children
\emph default
-Liste von 
\emph on
node
\emph default
 hinzugefügt.
 Zurückgegeben wird die Textposition, an der das Parsen abgebrochen wurde,
 weil das Tag entweder kein gegenseitig abschließendes Tag (also zu <Text>
 z.B.
 </Text) hat, oder das Tag nur ein Einzelelement ohne Unterelement ist.
\newline
Wichtig
 ist, dass der Zeiger 
\emph on
tag
\emph default
 des Elements 
\emph on
node
\emph default
 (sowie die entsprechenden Zeiger aller Kindelemente) auf Positionen im
 String 
\emph on
xml
\emph default
 zeigen.
 Folglich darf der String erst dann an eine andere Adresse verschoben oder
 freigegeben werden, wenn der XML-Baum beseitigt wurde.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Der XML-Code ist nicht einwandfrei.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Einer der Eingabezeiger ist ungültig.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
spxml_destroy_tree
\emph default
 - XML-Baum vernichten
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/spxml.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
void spxml_destroy_tree(spxml_node_t *node)
\end_layout

\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
node Anfangsknoten des zu löschenden Baums
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Keiner.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Dieser Aufruf löscht alle Kind-Knoten von 
\emph on
node
\emph default
 aus dem Speicher und entfernt die entsprechenden 
\emph on
children
\emph default
-Eintragung in 
\emph on
node
\emph default
.
 Die Struktur 
\emph on
node
\emph default
 selbst wird dabei jedoch nicht freigegeben.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültiger Zeiger.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Subsection

\emph on
spxml_resolve_path
\emph default
 - XML-Pfad in Element auflösen
\end_layout

\begin_layout Description
Deklaration: 
\end_layout

\begin_layout LyX-Code

\size scriptsize
#include <hydrixos/spxml.h>
\end_layout

\begin_layout LyX-Code

\size scriptsize
spxml_node_t* spxml_resolve_path(const utf8_t *path, spxml_node_t *node)
\end_layout

\begin_layout Description
Eingabeparameter:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
path Aufzulösender Pfad
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
node Anfangsknoten des zu durchsuchenden Baums
\end_layout

\end_deeper
\begin_layout Description
Rückgabewerte:
\end_layout

\begin_deeper
\begin_layout Standard
Gefundenes Element.
 NULL, bei Fehlschlag.
\end_layout

\end_deeper
\begin_layout Description
Beschreibung:
\end_layout

\begin_deeper
\begin_layout Standard
Dieser Aufruf verwendet den Pfad 
\emph on
path
\emph default
 um ein Element im XML-Baum 
\emph on
node
\emph default
 zu finden.
 Der Pfad ist ähnlich einem Dateipfad aufgebaut (Wurzel /, Pfad-Trennzeichen
 /), wobei jedes Element des Pfads den Namen des entsprechenden XML-Elements
 trägt.
\end_layout

\end_deeper
\begin_layout Description
Beschränkungen:
\end_layout

\begin_deeper
\begin_layout Standard
Keine.
\end_layout

\end_deeper
\begin_layout Description
Fehlercodes:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="block" valignment="top" width="6cm">
<column alignment="block" valignment="top" width="10cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ADDRESS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ungültiger Zeiger.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ERR_INVALID_ARGUMENT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Pfad nicht gefunden oder ungültig.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\newpage

\end_layout

\begin_layout Part
Implementierung der hyBaseLib
\end_layout

\begin_layout Standard
Fehlt.
\end_layout

\end_body
\end_document
